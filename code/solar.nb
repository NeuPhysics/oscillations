(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    276286,       5769]
NotebookOptionsPosition[    273307,       5670]
NotebookOutlinePosition[    273695,       5687]
CellTagsIndexPosition[    273652,       5684]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.644621988851782*^9, 3.64462199914039*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "@", 
  RowBox[{"NotebookDirectory", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.644621968530374*^9, 3.644622003851451*^9}}],

Cell[BoxData["\<\"/Users/leima/Dropbox/Research/git/15summer/code\"\>"], \
"Output",
 CellChangeTimes->{{3.6446219850925293`*^9, 3.6446220044031553`*^9}, {
   3.644628822463407*^9, 3.644628849085437*^9}, 3.6446466611943703`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sne", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<data/neordered.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6446219074909973`*^9, 3.644621961331574*^9}, {
  3.644622015331234*^9, 3.6446220222271442`*^9}, {3.644628856891851*^9, 
  3.644628865218534*^9}, {3.644629071328656*^9, 3.644629073284955*^9}, {
  3.6446291106240997`*^9, 3.6446291119873962`*^9}, {3.644629162789288*^9, 
  3.6446291876909122`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sne", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.644622039803378*^9, 3.644622043800436*^9}, {
  3.644629089845952*^9, 3.644629095381762*^9}, {3.644629130510089*^9, 
  3.644629157299677*^9}, {3.644629197284107*^9, 3.6446291988570223`*^9}, {
  3.644633264475381*^9, 3.6446332710737963`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00819005`", ",", "2.00852`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.644622044207594*^9, 3.644628867210965*^9, {3.6446290758213043`*^9, 
   3.644629157720818*^9}, {3.6446291903795643`*^9, 3.644629199239354*^9}, {
   3.644633265077075*^9, 3.644633271357647*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sneplt", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"sne", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "200", ",", 
       RowBox[{
        RowBox[{"Length", "@", "sne"}], "-", "1800"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"snepl", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"sne", ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.644633121726836*^9, 3.6446332478577623`*^9}, {
  3.6446332809070253`*^9, 3.6446333488498774`*^9}, {3.644633811218197*^9, 
  3.6446338191936007`*^9}, {3.644646646789858*^9, 3.6446466474774227`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.006944444444444445], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw0XHlcjN8Xbt+zhlARyRLK1x51IoQKKSJbQsiaLRJtthSVilKEVllKe5F7
WymltO97MzU187bvNb/7zvTzj8/TzLzzvveee85zznnOKFtc2X9GSEBAIF1S
QID+v/bJBmZXpgOsa5Girk0V0NFZVXTNRsIR5gwvTjxE8HeJ+J9iBo4wPmm7
ozbBiRWf/gV5OELjQovdKgS/u2wfvb/UETI32E+XIphr743kFZ3gavvlt6wp
AjoKLIXwwdNOMPft8aV/CD5u03St/4sTZO3bE/uJ4Ft/m0vkB53AWlgb3Aju
DHugfkbXGRTiV+RcJJjTdaSs2t0Znot1ztxJ8Hzjs86PapxBwDT61EKCKR9r
TcvlD+Ba2I2o8ckCOsxrtWaOdg+geWDdWAXBVfd1u+vyHsDBnUO74ggO/SP+
0WH+Q3Bf9/yQK8HhoSrtV288hN8qC8+eJNg57Z1BUPZDEJyeeHM9wfvEz03V
mf8INgkaPpAl2KTy8cnltwl+FmtSO0lAh/1kKPzmP4JnKyyKJNjWPN546fLH
sDnEuc+e4CHznyf1nhC8qj1zH8EXn04tym95DMJHFh1SINjd5oN9zbYn8OfB
CRZTVkBHuMpmxCLkCbz46mcXQ/BiIdfoS+IuoHwrtOAOwSMdVcFjVi4QpRWj
okNwbesp7fkFLqAtim+LEfy3b4F9ybqn4G0V+PyXjIDO8pPTipYFPgVW/v3g
JwSb3FYLXSHpCuJFGnbbCG5j33AruOEKKqWNxgIE75zc2jW/0RV0KrzVfkgL
6GjY2HzdaOQGx6p3CN8muPGpBoub6gaS9IYSfPc/bqv/mmfA/r5gsE5KQMd/
Pktb4OMz8B2+Y+xJ8PsPLFPNec9Bd+O/r1sJbhcdDjR99RziZoz84UiS9dot
P+vQVHeg3AcifAj+lKK9dNczd1gi1euymWAUue6Cj6gHWDzoPNckIaAT8XPP
9ofbPeBUAJJ8SLCPK3PBjUcesGz/yYvKBNedGr5y5bcHdIsL56eIC+g81nu8
3EbaExyP2PSYEKxd83TSi72eMCWyfVaHGFmP+xLmSd6eYPnuv/F7BJcq9W8V
rPKEH553micTnPHTOOH8ghfw/ueZPa9EBXSuJKiId1i9gIftRolKBDNGj5sE
xL4AK3ntBaEiAjqq7kKBttwXUO2QP3khwf9dnsx8pO8Fe9vMxwKFBXTOMu/7
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
BplutdkVMKMBtq5cbHr2Qhz6sKRgcbdKA6he2rt2nl0C4qUNaxrg5dVnNz65
JSGOz51PX3UboI1kk1JvviNKIWffDOMGIEFgdNWXFKTkVr7YwaIBFhA6vDgF
IY8y511d1g0gNt1e7iYDI37cbACruuoTWpxUNGNuj2ajRwOk0OliXxpaPD1B
yuJdA3BVtG2cxtLRPeasRa2RDVCSl1nXL5KJBIPXWV9DDQBrjyfvkslC0Tun
UwL5DRN+8xcKy3ZL8KltmKiL/UY5/2V8W8lpgNMqdx+8Vs5Gcx8k1fwZI9dT
3cOxWZKDIr/pm1yRbYRK5qqc1ep/kPUv/9GZio0g/yoiNnNtLjqZ+bE0bXkj
sETWTF23OQ/d/3Sz8drmRjAi6cGDrX9R3aXaDUsNGsFA4c786J35yFRFNbzh
SCO8eKH06ODiAsR7nAuNMHeSvjBEFKCxVV8MT91tBOIUk2au+IfUXDqcl7s2
wrf9W7aXRP5DV4qligZeN4L7asPy+/8VogZxpvGviEY4FtSiMzmuEDkudBTz
T26EneQUPF1fhPYsrmBdy2mE3lm2Ga1JRYhXrq8kn1+T+GXF5mL0uOr9yVWs
RphT73Tx8M9iVPNqNaGgjWD5n0L+WZ0StGtn8KVRySbYoZsVZJJWgoaLv+1u
m90ErcPaCirbSlHqgbc65UubQNGazlRLUTxdttvYBDOez/ex0CtDqXMLw/Gu
Jrju+OdU3u8yRLPb5MNNYLn6cfDM3eXoJMnSEs43QUeQsan2n3JUGylkl3Cn
Cchd79YxqEBPkoKtvrs0AS+tzKtAuxMWXUv1a4Lk6R3or2ElWvDx4Yvsj03g
IPtkiunfSjTVPeNPUVITfKm59T5pTxVacYyuUDUByTYmc/5WIV7aWtEEpryC
fDWKKDE1FWU1gZDa45kVf6tRr+u03lnDTeA64m7weE8NurDMNW2lVDPML7xC
lq4GDf1o/Kg3pxm8ss4pHjCsRW91Z0dYLGuGhM4fJhdza5EuXSbUbAbXfRdF
DfXr0Pi2M+mvdzdD0xid+NahgpjDfUlmzXDratT6VSr1KGgB2SGrZuAt16l6
dNNz6+FBW8J7nM/La38guLX3x1zXZvgYvEdnekM9Oq7/W1zLvxnue5xJzZjX
gPS++u8//qkZkvbnO+07TjCJoo7fm+EILwFsQDuOCswJ+dMM667VeHdXNiB1
VHQ6q6oZ1vQ0vxaa3YjUZz763dbeDNq26feaDzYi+TuHp0uPNsPm6a9VXno3
IsHq5ceXy7SAUGnEsemFjahot7KHvkIL3Pk7c4rZ5CYUmjQjzWo54YHzt3Sd
MmhCJ+kEZ3ML+JTtbl3p0oQUI3V6gw1aQLN12qSUzCb0aYtvVcrRFpC4NTpL
QqgZLaifElF8sQXUzmeul9NuRvw42gLP856b1N1pRnSXesStBa7b9yVeiWtG
fL/SApEvN61O7WxGvHPypQVMxXWqS9Ra0K/KugqllBbQbtvm9NGyBVk3O/5e
kNcyUedqQXSZUaWmBQLkX3i5VLUgujuqxG6BRJ/j/s9mMJC5R+/5GWPk+8qm
dW/Zy0B8XQUDEttoAQUDUZ55B3oUGKA2Orv2cyoDbdtzIr9sOQMe/2eSaTLM
QK1DRTtuajJAROjNLv9lTFTgYLvaSpsB7dZ1Vm82MFGiuPL8E1sZYK74a7LP
DiaiVRomOxgQXt/p9MSEiR7PuDy0czcDfIrevrhuwUSHwtfmbdrDAG0SBQ9d
ZaJlm8berdzPADeN7Ulr7jPRSF7GDeWD5P2vtQqk3Jgo19xtp5wZA7atSXYu
92OiNz3GCuLHGfC1y48wP3K9F5vLBk4y4GftWNfxOCaatmoRSe0ZcG2kxWtG
Ovk8Xe87z4DGTcSzF5D7udwvnkPygIYE5awLteT7ZwtEJFozwN/05kHpDib6
my5JMjsGNP932erdEBNduzydhADGRB7Uinh++h4DbC/+cYiRa0Uf8vVmWzsy
ILp0n5X6glak/ujah2MPGfz8WL0Vhe78OW2nCwOGt0sOS2u1Ir68hAFS+pvf
Xdzdij6mrpGZ50nWy1UuJ820Fc174GAn6cOAEvEXNpPOtCK6C9/ly4CwGK9U
o2utqHa+mVplAAPE/TXdn9q3Ii0qyyntHQP6Uh7VJ7q1ojcpqysjghlAV12r
/VpRy6tUec9wBtjFT5rUH9qKVl7ba2rzmQEz3HazRGJbkY1Bjc+xKAZovVHb
LZlK7uc/t+9bYhlQ3VcoJ/i3FVXJb2pYlMiAbh+d3R2VrUiW2yYm9YMBr6yN
hfOYrWhJVxLxXAzIeSKtE9Tbivj1LwYc74n4ayXYhnY22Mp9/cUABz+qfvGk
NmRQd0Hi+R8G0FWc0jltyKjm6OilfAaMF8nK3V7chrSZl8v0i0jedjTLUHZN
G1re5RC9tIwBuhssK7x02tCckRfPxKsYIK06voRl0IYkREPOtdQyIFStfMfm
w22obg5dUWLAUq0ifbczbShw8/Li1wwGZGz9cr7Wug2dOE539sj97Xz8WON+
G5rnUEwiIwOGDE+GOD1tQ9lfdiUs6ibrdeJoROHLNnSUWbdypI8Bs86s+60S
1Iao+bdCC4YY8M1qCuNWZBtyNJNRCh1jgMFVlnD29zY0Fphud0eQCfmOLRKz
f7ehUzxizuT324vb0O+tNyQUJJnA8U1W+17fhlZ4G+xhyzDhyVvvXbLsNmRH
F8CmMGFh8OWzJ4baUKyZubuLHBNC485fjBRlofZ026CD8kzY8l33qeA0FpLd
GP9WWYEJGbna7kZKLLSSPhjzmBN1IBbaoL7HLm4hE3KpNX5d61hoa1TE8fuL
mWDZNylBV5eFDFeJb9FTYwKL7KrXXhZalhPSJa3OhMvyoqlNR1iIrq4U/seE
rqUCWavPsVDTSON+n3VM4JXBb7AQr7yryYQhg/78IgcWurLdwmmONhPuHe8q
XviMhebR8qMtTBC42lFx3Y+F/oYudPDfzoQHjsza9BAWOstLsJgg4dXYND2a
hXhx0ZAJrsE1rad+spBj6y6/4n1MmBxfzo7JYSHhbxcZHiZMsCvqrRAsY6HL
D6Pm6B8i12+hao2aWCj9zIx1wkeZ4NzPanpPsdCsHbZG308woXO6eAE1wkLa
2sqbrpxiws8HUpPUJdpRpRLd8WLCu8YNnVYb21Hpfp1KrgMTfNfsaA+3akdi
3R3dX9yZEGZLn9x25ND5fpv+W+ZEn6cdrTBziC/5zISq4Ta4MN6OFi08e3Lv
dyYI0u1b9Q60l25oZTNB69SJ6C7zDpTBcteQKWeCxZtldatfdCDnmqhLRgwm
BP4pVrmd3oF469rLhG72MeefvR3o2yAxTKFWWMlr4LORsnLOrNgprXBhd/Qk
PVM2yoi9wolUaoWw20dNXJ+wEU3n3ixvhaZQsdf5SWw0zo4+YaPZCpIN/7Km
trPR+U8vfmvvbIXtk+1kDipwkOJvW6u+A+R6u/Q2+hpykOg+t+V+p1rBw3ma
ZeV9Dlq/PnTxcutWCMwevzMnioMCXNq2fr7fCpnCOaFHGzhIf9PaV3PdWqF4
V3xywDQKrTwUIX3brxVy/dPjKnUpZFa8OCk9tBUqGyKz59ykUPL3v49GY1qh
aHVKxqFQCp0Wuv9MJbUVYj3bQ73LKLQ19mDsxr+tMFhHNxY6ES+MVrXy+bdi
J8qgyzutrVChdYeEEvI6YS1T+lqBH1c60ZbTnqq1gm2wq8zgZ4VlJzolVbrB
f1IbaIqdjrSx70RJc7dd2D63DdTW3n03w7cTHXJLLq1d3AZzT7/wjInqRGrn
zCzOrGnj16uzO9HOIKHFVTptMJaKr1MNnYinUzRsA3Zn2elnw51o9d6vSz0O
t0HtPOqA2vQuJE+X0860Aa/9q9aFNB4EDHCt22AVXeDZ1oVexESFKd5vgwXW
7iGTj3WhxTQtf9oGJOl8+eVmFxLbucZxwcs2uOklL3LwOfn8e6d06Q9tcCZN
va8ntAu5nRle1PilbUIv1YVWu9imhiW1gd7842Xq5V2Il+ZktsH6vTd/53V2
oVVipdajBW2whNcQ7Ubv6PJbddtEv68bHRIwFpvU2gZS1cn+YZrdaJs8PLvb
0wbDUoVu2427kS1NzMfboH1j272mC91o6IzGDhUpFlgFh3TfetCNvoQdPHFs
BguOFP1oknvTjfDm0zmP57NAX6i4ODquG0lo+R8IVGMBr932txv5BVTODl3H
gu/k25oZ3ejmkQWzAraw+PvD7UbOD73W2Buw+Psj34N6hGgmzYKPgetnfNTo
QS/bL62eYcGC13/3iOnt6kHOqwdHMi+ywHWMFoz0oH9/z888Z8MCO7qdatuD
9peIGA04smDk5cZjM716kOKm8Iybbiyg07zYTz3oPwET66aXLKjuPQv7M3rQ
CxUJU533LMhbaK/RWU0+HxD0/PknFtDtged9PYhXv45jTfQLepFz6lqbXsSC
FR3niYfvRcqmrMNTcligNNfx9jHoRbw6cTEL3jzUYnea9iIS9XNm1LKAlts+
v9qLkug2IpMFMvOmGi9w6UUOllPmlXeR53GhBRa9yKOco/RuhDxPYnOicXIv
Enobe/WwaDuMLHi/glnYi3jt5MntYPvs2Afb9l6UvuMw8pNvh6GB2bMmifSh
ZUqzShYsaIc2VVpB2IcqTWoW+qu1wzlPth2s7UMdtU8zRNa2T+i/+pBG8cmH
R7TbYTc198Rdyz7EnsKNCtFrh+zD5UWT7PtQz+fgGXX72iHpCZXx+VUf2ha+
P0bcrB029HzaqBPVh/r6mR+UT7XD0gXpy2p/96HO4Id/ll1shzlGlXPtGvqQ
QajUjkU328Hv+0uPycN9SHLk1rSp99tBnm6QTetHPB3ro3aQ4DU4+tHteL0r
ie7twAufuv1oy1RX+Vu+7SC2rKnu7NF+ZIXipi96387Xa97oR7W5rXrpH9tB
hHsk+/mzfhS9Qvjv/uh2oNOPBaH9iNkgElqU3A488/zZj3hxML0dptiu+6Rd
1o94OpU/7eDe3D2vkOpHb6USmUNF7Xz9jMQAOihDM/N2+KgRP6V5/gA6fGn8
xM3mduC1mzYOoB/Kz6QCOtph7ZbiewL7B5DDUmHx2N520GWuveViRV6/DZfR
aDtfr+A8gLYufjApWaQDtvz4eiLKfwCBovvscJkOwPTjxg4gfn27A8Bz8a6y
3AF0lCe07oCUkaYUq5YBZEc3FFQ6YDPdoBsbQNPVgjzz1TpghU/CwoCZg0g6
fureW6s7gJYnqKsPotPeZ49P2tQBalYasul6g0gpKxi92toBCn564+bmg2gv
zUR3d4C/sMj13tuDaJBrnfbAqANc/6M95CASlFuozzjUAVJvysoXRQyii3e/
L9po3jGh5xxEe5bNuWB/tgPo5TStGkSey82FEi53wNC7szGsnkFkYaWv2Hyz
A25Lqyy5LzOE7omDtcC9Dhi4WR8wddEQUq0v2zntQQfcIjBEawitkjl0bYZr
B/TtPvxow8EhFG3/VkzmRQfcoAXXl4eQz47cjh7fDuiZRxLax0NIbFfgwX+B
HUCzldbAIcSv53UAfZrvJg4hWjZr8aUDePKff0OocT4dUDtAesuk3b5tQ2iO
4cosnNwBs5lXtioLDSOeXjS1A1Sf/dOMmDOM6G4X61cHrOb9G0a2TxUWXP7b
wdeX6w8jz+Kt2c3FHbDHvn/h9tPDaJ6letWeqg7Ia4v2LbcbRoug0fRzQwdU
ust5nvQZRh9OHIExZgccHi4Q7fsyjF79eu25hdMB5aef2T7JGkb0at7t7QDT
/F3U3LphNOPgsvDw4Q4o3Ugc5sAwevzE3zhbgA0HgtPKt04ZQU/6vznVibGh
eJK9YemSESTw+blCmwwbjO9sSju/ZQRR4auUGdPYUNg0sG7s8Ai61HDnY7k8
G4yIN/S4NoJOnXwS8FOJDcd7ZwTPdh1BBUuODb9SYfP1EEEjqHFefO+5ZWx+
fejHCOIdUw02nL/S+TC7mFyvOXlpy1o22PAExCNoNGT7vReb2PDge8ytKtFR
JEInulvY4HmS7iCMIr8et3vZO9jwVtzmLHvdKEq5vkT3gAEbePK0vaPoijqt
1GKDmrxPseS5URSpuvewoSkbIpyMdr1xGEVnz4x4JBxlw1K27E8Nv1H0pc7A
YJYFG+jxhb/fRpGvywLCpNnAa4fnjKJh25+WSRfZ4BJHC3pHUXsY9/OQNRts
myeLvR0ZRRcIrVe3YcPQnlzbVXJjiCebtWMDHf3yl48hOe8PPncd2RN91TGk
HXmb5fmIDYdnJfwTOD6GBkR70964sqHc8foO71tjyMStZ/17Dza/r+A+hpaa
Jc3y9WFD6UHyh7AxFGQq7P3oNdm/1PDgPXgMffbo9rIKZANdFSgrH0OH6YAb
zAaavl3oGkP3eYGQDYQ1SPVKjqOdLseqqr6wYVTxqdC9BeOIVju9jmaDZEb7
sOimcfSWCsvST2ADL1wbj6Olt9ZM6vvOhmi6DHhxHJkt397tg9l8PcaDcTRb
aeTw8kz2RL1zHFnqH9yemM2G/tj0E15x4+hKgBxD6y+bP+/xdxx1krQivpAN
UwUf7wthjKMZY+/9FpexweOCbuYG7jiq711Z617Fhsml3I25s7hon4IOourY
wBWZRVwQF/HOSTMb7vMEGVzUNZVO4Nlw5S3Lw/8kF20sptJKO8jzSoSJqtty
0eRC4+YpXWyoW/+zP/cFF73vmfN9Wx8b8i1LmFafuChtH11xYE/U7bnocY2N
jPsYG75lEMJazUXddNlAkAP8z3GR4KOW/ARRDuyaOvtgl5gAjn9vEYAkOUBv
h850ATyZfUoUyXJAU0dDz32eAJ50rk0qfioHosu+Q62aAI6eRkdEDnTLzBle
vEEAD3c4tD+dzeHzo20CuLX/RdY5RQ6//rBPAPP4hTJngv8JYJ6+chEHXkvM
fXv8vABOmfNuTfESDp/f3hTAB8vev36xnAOz6QKOowD2Sl/8ZqcGh893nwvg
Z0VTDgyu5oBvjdfjh68FsNp02kI4QJd78kMF8BWnK6+1N3Fg1s59o/IxAthU
uWVxiTaHz0+QAB4lYeTMVg6ocL71vv8jgElSvpu9nQOnF5JIXCaASdJfe3kX
B2i5/dpmAUyrYVsNOND0LHehfacA3hbGrDm0jwM8cxgVwDzdozGHz2ckBTHP
Hkw58DA+QN96hiB2bIu97GzGgXW08EJZEH8cWjZUfowDzI+TkmavFMRfDAZD
7h+fuL6GIJ4TGl+8hWBrLamyIILhU6536QkO8Mx1nSAe/dhVaGjBgYO0wAsE
sSs+VIdPc4CcxlqhXYJYpKm+cNVZDtRX0QRPEG9cmns34DyHr2c6IohN75ZL
i17kAC88nBbEei2qVucvc/j++JIgljqb8DL7KgeSLbvz1tkI4kCBp56LrnP4
eisHQawUeu+6/U0O0N4xwkUQH6IL2jYcPj97IYjtthm4qNhyYCEvIAviazQh
t+PAdFouGyKI9y9rkEy5z4FNdXufvfoqiNk75vUIOnKAV75NIO+/cj99mzMH
5qrXqIilCuLsyHkWzg85QFbjqlaOIJYcbWCixxwYvm/140aRIBa9KL6w34XY
l8vxHd+qBTGLabh9mRsH9L32F7BbBPGHu6VrzZ5z+HyAEsS6cx1kn3hw+Pr1
QUGcUHgh5tsLDlwpj18SIyiEecfZmwOSPIGzEF7OE4ZxJvpuQnjl1TufZ/tx
gFZXOykKYeG7BsFr/DkQGEUOnKoQTvXUcTZ8w4GN9DidhhA2wrc0LAKJfUS5
7zm2UQjHiFGfrr3nQOj9WpPgrUKYe+jJJMcgDtyJNPPr1BfCaxO2HnoWQtaL
NusDQlh1o7mpVxgHGF8XNTsfF8Kzvt876PeRw9drnxXCGebjUn6fOGD8tXPl
LGshbMZLrDjAIWz3uK0Qrsi3WPoikpzvL9/vRDgLYbWQs7Yu34j92kk5dLkJ
4b28QTUOn2+8FML8Oi0HCCtzsw8UwiYkfTqawIGl9MEOF8I8eVoSB9Ljt/vJ
RgvhghLasXOAXwcQwgdmPjwml8KBR+5PlnpmCOEvl/sCen9ygJeu5QlhWu1Q
iDnglDM4MLtMCMvTg2VpHL6uqV4Iy/1Z8eVRBmeCnwjh4eO6V49mcSb0e0I4
h6TlGr85wKN7o0KYVrdzsznwk5aNigrj+odfKnL+cGDeSlrJK4y1ThKmlkfW
67UZoazC+AEtp8znAK2iU1QWxm/0MrmK/zgQt34w7fQyYfyOlsMVcuDJOXoi
Qhi7nQ+9+6aYrBfZnbHNwni37/kR01IOnF1OMrIdwribnMYp5ZwJvZMwdp5t
HJVVwQFeHfOQMGbYvM69XUXWSy/De6eFMF7dKFSwpIacRzpPvCCMz/EScs4E
nxfG1rR8sZ4DwnQaeF8Yn3LYNn1JIwccdUni8VgYa6vuf53XxOHrCD2FsVC5
g4R1C7l/Or16LYx933dtm8LkwAV6oCZIGMvbOJ/70soB5d9bJFd/EcZOh9Zd
38ni8ON1vDAu3i51pqGdA7/eFKYOI2E8tHv+oltsDr9/mi2MxY+a5kpQxF5L
PBJ/FQpjLi0H7iTr30WtXllN1vs93VDkwAPZvZHeLcKYV9bqIefNteqcACWM
dywMNN3cx4EAkv5aDgpj2hul9XMgYxH5RkERvKk+2WLHIIffP5IWwd77hrf+
HuKAHN1YkBPBP8vvdm0f4QAvj1QSwXzdOvHXSkPOjotFMFMgVUFrnAPPAkjC
qSGCadVxPJesx5xpA4c0RXDsoafNaoIUzBz5w8nWFcGXeINjFGjT5RRDETyl
Y1B9iggFgTRtPiiC/X+d1LAXpeBXGSHS5iKYVpO0iVGwJPGQkfN5EXzoa0Ke
iQQFvPGJayI48Iuzc4okBfRVze1EME8uJE0BTY//PBTBP5j42gMZakIvJ4KR
VGcNQ5YCix7rS+G+Ithn+8lZ2ydT4Go9rir3QQTz+NMUCjqMEpUefhLBo7Wh
MDKVArmCbeWdsSI4ZJWZ3oHpFNykx1d+iuD5AXsVP8lRUEpvzy8R/GCaZeX4
DIqv9/wngvn6YgokZz5ejSpFMPGWku/kqYn4JoIX08Lj2RTcGnOqiWKLYA26
gDSXAt5404AIXsgbzKHA5GOF8BcBUcyTNShSYE7LKKVEcXrAO8NJ8ygg5Dk0
ZroopsfmjOZTQHvNjYqiWNKEO/+FMjVRLxDFLlvMWwoWUBCRIBa/W0MUS6mn
fpysQgFvHGmjKD62hu70UBBC2MhJXVHst31JvJMqxfdXBqKYxyMXUzCV5zBE
cYt9tw215P/7JYp7wwfRwmUUxJ99KRJ+XhR31NCFKnK9gWeRWtdFMU9mvJwC
78cPzYrsRLHvhX9CsSso+HEnQvfyI1FskHGEWbeSApr9SnqI4rYl4jGSGhRs
w8omH/1E8VW/ojOrVlFwMXqH1rYgUUyv5uH/KMgT8zvd/FmU709XU/x4HS+K
w+fQDIfiz5NhUcz62uGUupY8Lz2AmS2KZ+7VKqxfR8GT5Mk6VkWiWG3kq8T4
eorPl2pE8dKYLaqzN1LwffFk6TiGKF5M0uQ1mhQcIMfdrFMU8+RCmyjgjS0M
ieLfUvfnWmwm19N/vilEWAw7Ma5zbmlRYHaaRFxZMUyyolRXbQp6aTo4Uwz/
jiMEECjgpY/zxTBvn3UooOWPe5eJ4ZhY4+tJW8j+/qIuDa8Ww9NwXmPmVoo/
T6Elhq1pWZEuBckpwcQyxfAHjrBH5TaKP09uJIaLppIPbKeA3zcVwxydN92t
OyiYwUuIxDBP96xH8edHL4vh/ng/qa6dFLzRtz5QYSOGcyUrmzt3UdCw5M7N
545iOOjoHNS5m4JFYo4+uq5i2OL7XQeOPgXnm57EDXqL4QVzarZ0GFB8/dlb
McybyzakYBmdIIeLYZ6cZQ8F9PSAYrQYptXg5XspiE4uuV74nTy/gNvZgn0U
9L8iBDOTPM/rF5/TjSbOb74YFl96WyppP8X37+ViWDs/cF2EMQW8cmWjGL55
85eFvwkFYrJj0492iGGfxVNuPT1AgT6dQPaLYd7c6UGKP0/HFcMfg5qsTptS
UBQsd+OupDgOuHTZYO8hCmY5KXhrTBfHt3XnzNhwmNg/LU9WEMfai5gZSmYU
X7ejKo6FxWNviB6hQMHu5H8HNMRxdquDSgfB5ofP75fSFMcnG90//D1KQY3v
26gMXXE8VPV2/rdjFH8e3VAc02pTz+MUvI2rWrnGVByPMMZZ1icoaHxBC97F
seXg3vX7zCk4QRM+K3GcTLeLTxL/ETk/79ANcSy7es1bCQsK5tPl4PviWP/o
r8RGgk/nHtP//VgcW3veTU4+RUH4xzMX7nmK41dZ6j9enCb+7dEl1//8xXGY
uGjIuTMUaJy++YkZLI55unhLijfeFPBVnB/PzlJg/8P0i0GiOPbkMOWaCc7w
O5EnmCaOjxnPj4k5R03M44pjvp+m+PWGEnHco+BJ7beigPfzCHXk837SR5Uu
UECyd5PUVnG8gw5/BI8KBK+z7hbHeS/oQTQKdGo/HVQdFccmcwOe3L9E8ed5
RSUwX/9DTfz+gAReu23GuMwVsn/TX97WmS2BQ8r/bSgmmHc8F0jg1gcFW15d
Jef54m3bkOUSeOuir6eOWlOwkrn/6IF1Ephnh9co2GixQltURwK/9mHr1hLM
07fuksBRh1fOfXOdgr2HGgXPGEvgTMUr3UduTPiHYxI4g10QJX+TnGcXemBW
Aqel/HelhOCsD20dp69K4Ai/ODmPWxP2YCuBX9zckLzbhgJ6HDHSWQKf5v0w
AMXXQzyTwEq0gJHg77Qc+6UELt9mSSgvBTy59TsJ7LVB7YOqLQW6dEIbIYHn
b/uvuZzgYFr+EUPuR5cuqFMgSm94igTWPKJzTsuOAloFIP1LAv+y1IugCOb9
fkSBBFZ96pH85h41MY8kgd+8T2wyvE/BnleZGYwmCUyCRdUQwbwyKVsCrxR4
VhhiT0FZzeYS5QEJbKM+kG3kQMGG/9xHUwUk8Ucrp/ARgunjclRKEleFyD4O
cSTXi/3k0T1dEvd3JBkYOpF4Rw9AK0pint6dYLrduXCxJKbD5GtnEu+yUH6i
hiQWYSgbaz+ggJZl7dKUxN2EXTUQTNgHs1ZXEtcFjds+fEhN6O0lMd12Vn1E
AS9vOCiJn99RtP5NcAQ9vmouifd0GhadfUyel6Sf0laSeOBaoILoEwp44xXX
JTFfp0BBFD0mdU8S69/eGgkuJJ5Ev6HCHkniGrG4ukqC6WrwBg9JfJXnYCjw
k/0v+7efJObJOV2J/3+z9MbxIEl8LmcPhBNss0J5Xu9nSdxyuvHgFjeKP/8f
L4lXz0rcXOr2//gkiX1TLm669IzET7oukC2JeWXB54Q/0QWRIknM49UE02rO
4WpJzK/zEP7E6ztLYnd6rI9gAc/7I5qdkjjqhvZmfQ9if7yNlMT/tA92VhGc
unHh7rvCUrhb4nLwRU8Snzo/RM6XlcIM1i/VIYJ7QxcQ5iGF6enCxy9IvKPd
wnwpzNOde02s3zIpXPYgNusdwXy+LoVjr6lrqHkT/zav9+JBLSnsaU5OAMHf
iXsf2SGFTc12sLR8yP7SPGufFFYyadTMInhxyLsqfTNyfcP7rnteUoCP0IIY
KexlvCm9mGCerPySFNY9PDhs9orYyzPbJztspHCVVensOoKv0gV8Byl8g5aj
+lJw11ndIPSpFJZ9/sKUSTAyX3/xiLcUdv/keey8H8Xns2+l8JRsj1PtBNPj
CgVhUtiuO2rfhdcUf778mxRmzv2n1U4wP7+Swvu3dy274E9BVUb22KRMKczv
01LgYUkSkr9SeCTyepFlAPGXJD32KpfCe1tiw5oJXksXKBql8DPVWafM31Cw
kNd4kMJ/zt5RqiZ4mhxkVfeR/YgdxQfeUiAon//uPVcK83+PgQJee0RSGuvQ
ctdAaqL/J43PBjwKTwucsAcFaWzTt+w/zXfURD4sja3pjSV4Q1W171sNaewY
47188Xtyns4Rj6gpjW3lzd4EEDzD1Oee6TZpfMxFp2/yBxJPdki4r9sjjU05
opYPCeb1xw5J440nOlIGCQ5r3bmSe1Iai1b3jJ4Poib6ddK41aDSpIbgd3ub
dxXelMax2Q1ee4IpUBSOLvtuL42JFyRUhZqoX0jjtflTh1aGEHukx4u9pHG7
qea8twRHSownvHgjjflzyISPOKimPQqTxto3P++3JdhtcE+u7Tdp7EyXZQle
53UlPongWuVMAReC5W9ztI5GS+MF4yf13QlOGyaOhmDCzn18CA6u+zkpIEYa
R8T71/sTvIceO4wlz/N41rZggjX03OuqCN51KvZ5BMGV2fVL7sRJ4+dgVBFF
MN0+mRsvjQvnchYmEGy56ttQIsE8nk0wb54ygaw/bwCNgm5fx5xBguOCgxRy
Caa7Nf6J0njKzXkOxQQnWNhXaCVJ4wNGP3IqQyfOK8E9LaLlemEU/EcXINKl
8d1HV3OjCRZhui1h50lj4cVVWDGcAr3PmWEC5dL46a/tcU8ITi9SOzO7URpP
Oxf1sYfgO8fICegg6yW3+eHRjxPxr18a9+Jf5pkEK9ABVEAGn7lkvHllxMT5
kZLB5HTNekUwbxxJTgavKnStHCN4U7NlouA8Gez6dMOb059I/O2P/LxmqQzO
3yOml01wyAXVuourZfBSmr5//j9flcG0jMmb4KTZlzFTTwbTZZkhgtM7p65a
tF8G15ygJ5ypiX6bDJ6vIu2LCabHlyItZbBh79CShV8Jvx2Pvtt9VQafKpB8
70zwltffzmnelcEe7wZXMb5O8MeHMjjUTiJiRyQ1MZ8ug38ckl8QRrC511qW
8msZXLhmyWvxKAoMe54b3wgmWOHw0BmCaVV41lcZ/E/k6aEMgi3o9kGSDC7o
SE5Y8G3Cf6YTXNw+05FgXj8zjzz/D4VbdQTz5q7LZXBi1OUfm6Ip/vx6owx+
F4yFfAmm2+2T2DLYxXfarl6Cz9A/mDQgg4/4Pry1J4acr692L5mCsniF72BQ
OMGsI4wbh2VkMV9HReKR5D7jPzNlMW++mOBweTpSyOIPr4yWJxB87OmnnJ9q
spivayX52uiVRZvWyeLZkXcOnCU469IahwQdWczXwVPAS3P0ZbF71vv7s+LJ
+Z0hH518QBavrj1oe4ngX/rrSeooizltrOeZBLMdD5r/tpLFXoLvns5NoMBg
TtBNk5uyeP6iW5euEPwpmnpaby+LMzernc8kWJeWQz2VxfvNBQ1mJxL/Gda0
SthHFg/Y0A1X8n4R13S/QFl8OezL1FSCefP/EbKYVqfIJVEw0HzyfWmsLHbh
HC47RzCvf4/+19R9x9Xcv38AL7JTZ692mSE72yEiI3uTJGS77b1llvm1Z2RX
9gxdQrltQkpmRNY5VpLG73pfn4/7+vnv+bhv6ZzzOZ/Pe1zX610ebGjAhM+j
j9DI60Z5mBoYMMr+vHy9PsTfV6zDoa/PfHRj0YvyMCTGt+gI+kvFyPuNP+Dv
967T0SJ0YJ0Jupwf5aEpFfBYzNI6RnnY1m1gtSg0bcuUdYD8yCkZVvQlMd3S
OoD/oyOTml+wSP0g7g6wV3G94kr0TNGe7O0AUl8SXo9VBqxKrO8ADXc27lX1
okXaT2rhIM0P0Rua44i7gwPQ8hv6woCrUwf3cgDN5CxX1SWLmaZVIQ7Q9nqL
HUGX5O/zaAdY4zjD9zBa0WKkuvJUB7gy+OGpHPTLRX52zgscIOeUT32/BIvU
vx7pACrtoa0rEuT7xSb8/YfbOaUmyOPl3Q4wKHnufHewmONSAjq8jXWAWZX+
vBuBpr7Ksw5AlyfI85krDnDyzVd8YuF8YSbeKe84wL1WY5zaXLaYy4kNvTQH
+LT7/fxV6D0tdl5f98YBvpYPv/sYPTF86rmlFgf4Jdp3E/H6EHW/eQ7S/gBa
7Vhl64QSjmDbud/ZGLSUZ+YIJc/nlPiBrhhU9/cwJ0f4Wetk40ZX8H5m16hK
SCVHyNvaZek89IFxYqHAEahsFk15TU0dIXXZza9lr+LzpE0/73FtHQGfFpW6
oCkPppsjnJzapv96NK0vBzkClf+jvUVj7HBHmDH+9WGXazgfELe5iY7QlW6g
+Po31awJcxyh6tSdmXvQDyL8U9KW4e+fN7so69rf+bEjpM0SHV843xABCrsc
YYuYDqGp/uCwI1B/DVopBjSnHaGOS+NmFjSVZV52hLJiuSPZYr59S/xxhJs+
hgETk//e/x1B6muwmPM+4xci0xF8+zRs9x0tlm8nfHGEX1kNOta7juPVFBGo
4whnJ4vKHYv5xeiJoTOKKYAeg2iHqPa3XUsroPzhaV7f0c2oYU4BZ/zFSFde
L1ErIISCO3A+1wXfQKMCys0UlVcWc593htUXXRVAOWXoDJ96qSMqKIDWrW5Y
pP43bwV87xW0ZCTaRgy4aipgScGOPvvRlHdUXwGm6JdV36BnJKocqzRRwNXm
thqvmxYpT6SFAvq89XsbjKa8iTYKeLRx7/Yt6GMJn3Y07aiA4aLAE93trGv4
x64KyH9TpYXmlsUstgc39lYAlbGjxape6yAF/Gz35egydOKzvvGfBytgQn6X
EVdv/f38FWCJO+FRhF5TNrRcy7EKGBWiS290G78PFnwDJipA6qO0SPlf0xUw
NOlp+yNo2p+cq5DWQ9C/bAPGvF6kgIAGibs97+B8aVNHbcRyBcT99Pfrj072
6Xqx/moFaMQACt1BtL2vV8CMCYHzb6EpzmGrAl7Wuu9e4i6Of8WCcZQC2lh6
QDM0DS/3KSAm9knwFPTtPvW2b49RwJ+ps7Ni0FTfexw/P1+xI2kxz3PAkcZZ
BRy12WfvfA/nU2KB/qICdAlVY3qgpTwZfD3L7tRZgZauA/x8u088dxldbGj3
OOsdBdi5Glrkoinf46ECmv54Flv9Pj4vTpe7PTldARGXFtQLRY8XBTwvFfB0
aeX4zWiqN8zC1xv8ucodNMUhfVRAx/onNhR7YDG/8g9uueWrArYW9XZphP7e
9GyTUb8U8PCRy4oxaNpmLFCAfUxmbhR6dPO48triSvBfcHDYY/RDvJ19Lq2E
2bRhZjH3FgU7DkoQt+NmaMpf0SjhicJ543g05aOYlKCgAh6LtP/mrgSc5fV9
gqa680pK6HH4SFzZh/L1Vl0JEfMnO5vRohvZu44SxGrDeDT16zdUwj3/Vkl7
0HHef+JKN1fCt8reTo/R1N/YSgnqsvjNf2Qxzz5xOzK7nRLqf/p1tTH68Poy
CQ87K6FFepHNqEfy86SnEgZfyOq5HV26n+iQV8KYQ1/W3EabVuw7sS5ECasi
HmUVoatfuOk/K0wJW2Y886z1GOcLoqBwjBL2Dn87cBC67piiG+0nKiG5/a0T
a9FU3zBdCdQHinYVC/dzlUB9jWiNCGxapAS8+jp7pFrMZcY02vh6uRIyHMqv
6IqmPrLVSniXr0mej8bZ4Oy4Dfh6RcwM+naTTvfXbMP//sa/0kv0lXh84O1W
wtPnY9s5PMH5E21IKyHr1pTw5mjaf45TQnrSzgOj0bQsflIJd+H6zS1oqi85
p4Qr579+uY5eaZv28VmCEqTcOfz+uJ3fdemaEg7HtapfMc0i7z8rYdeB0X26
o1+VW3dwwX0lULkFmvI9UpUw4cCL8Fg0xQk8U8Kw3aUPPkXTclKmEqgeLR3H
h7lLN6myldBQbHiiJ1XFT/iLErQHrr0MQYvtrlc/lPA91vFjJJpuO3l4PYh1
2XR5PGajgrhze4reon90FokdKohI+FxG9dQi5Q3Yq0CqT8X364nf6oUqFbS9
Od91JLrNncQdUwwqqHD/ZpUN6BtX/GJHuKpApFgBerGT9XdIBZW0PomW8m9U
sCrvo1aX8Xf9UgVjbHzd/dBK36YXu/mqoJ4qSjka7RVV4123pir442VffAOa
8uT8VPCkaq/yiei2opEyQAU7m1wu/IiW8jBUMCywulX7DL9f+Pa066GCGsEb
X+HNUspj66eCZ7O8zoc9k+8Hg1QQvXLl4TVo5YtlfWsOU8HIXb+3xaOPh7uX
qjhaBbWPD1n5Fk3lmhNU8OqudVj55xapn3uaCg686t+nAZrywOaogNoHn8vf
r4UqoLJHND2Xlqngrs+LvKPoXiKwcpUK5nYclfLkuTwfX6+CmiN/HbZ5gfNb
cdluVcGLJQsXVUHT/lkUvn97HYO6vPi7fqCCFle21p+GPrJ51onbsSqwvqzs
sAtN04MTKthVeCIrGU11/edU0EgEG6Ep9yhBBdn+n+doX+L4W5RtXlPB5tDp
vZuhK2zTXXh/UwV1xQIC+uqs6bY591WQeUgMtC1mWkd8ooJZD4OPHH0pr288
V4GWAmssZhqOvlHBkcrnffLRlCf6QQXB/m1KVXiF7794IVYV5I79ntQOTfk3
OSpYs2nX4nFos83BwG35KqiWGNhmPZr6HoqpQZT9xKPn1C9VOqu0GoLEBY+m
eFlHNUh5LTg/ePn4WVOtGqidGE3DVyc1qHfc+9gZTfGHHmqgvp3X8n5aZTXU
LOjQbTO66cLFhWV81HCsjun3BTTVK9ZTS+vd6GDR2N5YDbfXrA8umYn3n7sh
ly60UMOweD+36ugdFXDA2EYN2VZFUmd0tojjCFTDaJymTkTX3X9z8ODuaqB4
rUz5+d1XLa2fo3FQNOVSsBoozggt9f2oIdKa4273xmK+kz/SQTFaDY6VriVX
RlP74AQ1zAw72bMdmqaz09RQuG1B/mj0jQIH//lz1EBt8+jaFNikhuKl3dqf
RFOe23I1jMO74SO0GI4+W62Gr3My5vx+I69vblDDpJOHKrq8tcj10Ph+/9x8
ovlb+f60Rw0dxbQNTfXLB9VwZ3Tv9wvRMRPtrw88oobGcW2m7H0rj7dOqWGf
pb5dMpriJePVULWi3eEP6AK1SJjEz2fY94b2WRapnjNZDTYHXifVyPo7/8X3
M/t+j85Z8n5VihqkvBWcb91JH6NPV0Pr0Uf/WYtu9PjamHov1bD5HLw9liU/
T7PUUEIsoKG9REH+J3z/m+60/YkWw7+t39RA/fjv8H5bo3kJyFVDnZs77HzR
Yjv6XaEadtiLBT+LVN9ZQgPf++4oNRUt7W9rIHhr5PpNaKpvU2pA6ue1mB1F
+ZleA+7ekZvS0H33uOIUUgOTp24v/xsd/eZRo5IVNHDjauwCw3uLubIYAHtr
wFe0W6OTMk4tmlVLAyu6x4b3RS94nbwp3lcDL3ddzJv2Xl6fa6qB+qKNHK3f
WWxQ01YaWN7k+ZszaIqtaaeBF0txgovGp+mh4501UO9x4Z0c9KInm/3e9dTA
Mi/H1rpsvN6MXdOdBuD//4/bufroF7npdTsM1oCLaBdGf00dEjljuAYm6EOW
T0AXO/Ml6+BYDSQPGV+0Bk15dZM04Hx8/qRjaKrfm6mB/uVO3LuDFtP5+vM1
cLTPFf8vaMq3WqIBWvf9gOMtESAUqQHah0Drnr/1vLROI9c34PzPvu+zD5s1
AMfC7g5Fi+mPZpcGtBTIhveX01VOtNynge59Du7ajRaru2NjNLD2WHp+Anpf
CD4xjmuAYjPRFGd1VgOOQ5qdykOvvvi84OslDQw5Fuht+miR8oSvaWB32bmL
G6A33niq7HQT3//Qo697fJT3v+5rgGIp0VRPnqqBNp71FkSixXTl+TMNhM8c
+vwQWksF1xq48nBD4+voQaKw6YMGivlc3/D2o/x5WzVQdZ0p3eaTxVzj7sL4
EzkaGP6pg68rWspX0sA+UY6KrqsLDKtcXAt3Dt191AudMjIgI7SMFuztbOtM
QlP9iqMW6o3oPnnVJ3m8r9XChMRF92PQVM/lrIUtlVM119E0T/bUwuWIqn0y
0V87FFw4WEULNln9Ttp8xu+DSB/y0ULlDrG/nNC1akLzxvW10PloUeMG6Bli
u72JFqS6WYuUx9lSC6fGLkwfh96WgROaAC08S8EBNpr6QzppwY4eWPg89y1I
W9VDC9V3zIi+jA6uelOR3E8LoksvA037QIO0MHO4W7VcdGqeZ1SNMC3suT1+
rPqLxSy+DgPGaOFk87ebqqPFdtuyiVppfw/9oP66caena6F4meVuoejk0JLe
mXO1UG1sxuA5aMqXXqwFqmP7Io+/I7QQ2nr3vePoKzum5I5aqwXKr0OfvZV9
fNMmLWwz4YwQnTVg+eEbO7RwZe75+cUseL9ooimRF62Fh9YaMU5oyvs6rIX8
nvMsvhZ5PeGYFsonfzd2scj3izNacGkY1noEem0JfMJd1IL/9nNLFqE7iQWQ
q1qgHDV05cTF+3vf0ELY3F0Zp9FUx3NPC9OoUQzfn5pPyj99rIVlIUtqZ6NF
uojbMy0cTUqbZGe1mC8X9Toemomfd4PAnS5Wef08WwsPDsC/vmgpD1oLmcZ6
Pzpb5fW+HC38WL7fdQSaLth8LZTIN7VbgKY6kGI6uZ4Ir0d8fLiU0YHig2f4
cTS9LkcdePTfcOQmetEQW/VZrQ7qUEGARcqfdNZBq2az7QrR4lPq56mDZueV
Ou1Xi1lsv8dU0UGnauEtfNCr06/+W+Cjg4Hbcke2RVOZdX0d9DVGzhqIvvur
e+beJjoYsdxm/1Q09dG01MGQUuvPrkRv67J0XqsAHUyeVjpzP5qWEzvpYJwo
b0NTPXgPHUj9LBY5H1QHMzKja1nQFIcWooNJgxr5lfxmMYvqhdFhOgi/HzPa
7dvf/SUdzO3Uco4vesnuFjuvT9TB9JuPVgWiqe99ug4oF/mbvH4zTwci7mA2
+meYiOzTwRxqFLeY1y8Yiy9RB9NEwSGa6t3X6mBira02V9Bfh+MdcZMOpLo6
i9T/tkMHYd5Xvb6ia+1o2aooWgch+/vUL/0dX48o3zmsg/4VRMUmXo+i/eyY
DnpGze/jixblthPP6KCRd4OuHdAeYsJ/UQc0rkH/bneqc/IVHdSoMGjSdDTl
of2rg8pRP8JXo6W8Lx2U8z40Zy/6gic+gB/roMT+5qsvoG/bLmg0IwOvF6+U
qBT0nzWedWJe6+B1zNIt79HUf/NeByIlrQi9WrMmRGvRARx/EK35YTGn9wz4
3e6nDs7XDDtdDR30u/rdhX90sP2s85EW6ILAKq3BVg/zWz7Y3xNN+W6l9DBT
lM//kOd/DnoY2BafWOhAsXGi0YOfiFtDU56RSQ9NA4ddiEV3Fws0Hnpwe+x0
KhE9lALs9FA8+H5sKvpIxTcLd9TQQ9a7xfs+oek2WFcPN/4RAw4cf9UUN0y9
tL//U95/b6GH/VMWH6yBxncj/3kbPawoarLbDy3KXSsG6oHyVdCjy/zeFdZd
D12V+9eN/imvh/bVQ/0tAyLm/5Tnp8F6MHipwjeg08R0bpge3p55P+Qgms4X
GK0HWu5FG0SBzAQ9xPzbvVcKmsoBpulhVTeR+C7fz+boYeLTS20L0JfSspJ+
LNKDWWxQ51ikfLsVevASBYZoyldfo4eSIhAN/XhF1LbhG/WQokvN7Zgj789v
18PpnRFfQ9BiefzkHj1sruL3YQr69FOfeqkH9SDl2FvMPXOClPlH9NBeTETR
PxWRX9xP60H3NHr3MfT6ahdu+l/QQ+a4mQuuouuLdtdEPSTl1pqZhn44yLR4
1XU9rIss1f9Tzt/1ZD1I+SryeOWhHlodXldX88tiPnl0v0thuh5o3Rvd/ebj
PM9Xesh42OJ7IzTtm73TAwTlfOyEphySz3qI+HbrZgi6swgQ/a6Hvkv2HJ6E
FrtM8b/1UMl5xoolv+T9iyI90HYwmvIxSxogwV88UfHz2TzkTXV7A0SkF3jD
L3k9TWWQ6rF//Z2PG4CGz2iKs3Q1AO0DohcX9+gLFQxwqUafQ+VyLeZKIhDa
2wArEn2Wu+bK9Vu18eeJQGF0O7Gx08AADrn5tfzQt8odXdWpmQHSI0RBPo4v
rh7zGdvKAPs9DlnD0CH4di5tZ4CgxKgz09CNg3TqrZ0N4E3BHRap3r+nAfDd
mboDTf1g/Q0QE9Gm+RE09QOGGGC6WJ5Hb8e77KkwA9A+AJpyHMcYIL/Xx6tv
c+X9/4kGuP7xcnRurlyvN90AUi4uPp+GnbXdOdcA9WqIGZxFqlcNN4Bt4hJV
DXRpEVC7wgC0D4oe17ZhjWlrDLDwV89zXX7L630bDdBoU+C8EDTlqW83gKWh
f9sJ6L0avGL2GEDKa7OYxaix0UED9J9R79E6NNVJHDFAFcdyp/ahd89dsEJ7
ygCUl/JbHv/GG+T6V4uUZw8GaP/1a5k0NPWPJhkAB8/3stElRfz2LQOcqvNq
Yx56zMTQGYkPDDAq5cnAcnl4PZ/BAccTA4i0P2e0m1iAem4AMXqrjh6Jj6+V
bwwQeSrhRLM8eX/pgwFa9TozoxM6s7tNRJjVAKJcOShPXo/JMQDFd6JbiA3u
fAN0ap1weg66W7vt8yoVM4Ld29OzV6HF7oR9aSOI7rwdaOovKG+EvnWSv8Wh
aR1TbQTHlEvnEvLk699ohLi5qWF30FSX6GaEIe5ihcRiFuUCMyoagYZ3aKmu
0wjnxrzYU4gW26U+tY3Qx5TbtfwffL++4cSrgREc4i0GV3T2ln8bPG2KPz+s
dHL1P/Lzw88IoaVtVjZDU15QAP78U4amHf/I9/tORtgdUvtDP7RoT/jV3Qii
LH3EH3n/oq8RfsW1DJ6BnuhzrefQYCNs6N+v/LI/8vxvqBHql54YvxFN+f4j
jfDo5IoR+9ArW+AF/48RJoVE60+hd4kYhSlG8C627fk1NPVnzTTCv3EnIx7+
+TsfMsLw/rcbZ4rXF/J0963FRiglGjvQXiJuL8II+04WbrDJt5jpOI41Rmgj
yovR849XxW+eEWjehp7avtTHom1GGJM0Yqk3mvKOdhvBfuIC30bob6dEAa0R
Yty2vmmLnrLsQ+z8WCN0uHViba/8v/UMRkhZ9LlyKPpRGfyEzhqlfg801ZVc
NILqueuieflyvewVI2zZ0McYmS/PF64boVErkchkkfN5jPDEsmzyoXx5PSTF
CCEHrpQ9k//3ejaCTc+Ms9fQ1H/23AgUT4heGhqU0SbTCMqkzpnP0XS+zHsj
SPMgHO9fFhsq+O9V210pD60XP/CbES5nPo0vWSCv3+UaQcqPsUjnUxQYITvA
p8gDTXk+xUww3nb4/3zQjhud8S00Qd65qKpN0LSPY2+CzcPOp7ZDR4gYcqUJ
qA4JTfn7OhNQXhhadNXXcDJBndVhG8cVyPXL7iaID4iqPgsdKDbaK5igle3T
y0vRs8U2clUT3Dyn6b0eLX7sbB8TNKNGMou5y5t2D+rXNUGSr0gSxM9vIN4Z
Gpigk+V1wVn0B9GO2dQEj/c7r7tWII9PWpogeFCvKg8K5HoFfxPcr3AsOqNA
Hp+1M4G4jWWjqZ+9E/77Uf54B8bvT+N/7iztZoLu/eZ2sCmU55+9THDNNT25
bKE8HupngsBUdZAeLbrhEweaIGHr2DQP9AsRbzzYBG17HBjrg5b6r01A8bKF
8v77SBNUexYU1gpN/SNjTFJ9IFq02/Yfb4KK/b5N64cW3b1XJ5lgo6tIFMf5
tYg9nWYCHK2PH1cov98zTTBjf7Ev08XPEwPGOSb4NCpo5KJCeb44zwQDa53N
Womm834W4u9jU6/9xkJ5fLTYBN7XViZFFcrrzUtNQPkQaIrfXm4CB3FDRK8P
wAdmhAlGuIJnAlqkzmpWmiD9tWnnv4Xy+soqE9D2EprqyteYACcfczLQotxt
11oTFAsY8/oNug41spggyJDt/xmdM+NX8sz1JpDy+Czm6mKjYSP+frEJFW2K
LNL5MZtMED67ybLS6IqTi20pvdUELwPPfFKg+/08l758uwmkc4YsZtFOP2qX
CdZ/ERuMFjMd17HHBNZL3npv9Pl29sWq7TdBh1X7ZtQRP0+0vx0ywb5gMUCy
SOdrHTGBLU0cLNL5QSdMIOKrOqCp/+aMCcTss2uRPB+8YII/MXW690NTvsZl
E/QSBx6hKX80yQRieWVUkVyfcNMEOVXFChJ+XmnFY+GeCbri43I6WpW4J9Lr
sQliblyqtkD8/+sr7d31FH//ff2nLEU3EAV/r/D3n5qathot4jKysvD3b9u9
2Wb0NFFg/MkEH7ysS3YWydf3NxP4/xj1cX+RPJ7KNcGye6V949Ci+2p6oUnu
N5Gfp3ZOUGW2x5sLaDH8PlHWCRYGig4jfJ6L2AOFEzx3EUGP+HmJnB+9E3jm
nfqZgj5yp7b7TBcnmH2jdt8MdPQ/zcqmejlB4r47e14Xyevl3k7gQjdui7mh
WCCq5QQh3d91/So+H9Gv18AJLniFnvotft6sDe8uN3MCG/pjNVedPnmlbSP2
ADFgbuoEE0RZCTrmdeQtLzObzlvyY1N/lT87VDSwBLBFue3yDmy34SUWx3Ry
Alp3Q1N/cld2LTogiD0vIGG2Sx/2PUevRW37s5tSQasT9BQTL/QrUZYXwl7c
TGwosmn8MZzd8szGem1Gsel8t7FOkCxiudGUdz+eLfVjsR+tv/ut6TR2hY1F
q+fMZMfmDRhzbc7/+3liwXKBE9A6M1p0x/cJZ0t1vuz1g8Y3/L6CvXpp1TWt
V7FpPXKtE0j5+lYzzt7cLOvZ9lNERx67v1iQ2sam/q6d7M5NxAlF7CdPKh46
s88JnMVGBlrERxsOsZuJRqFYtpNYWD/Kpv21k2zHbXV3nzzjBCu9xMF0VnMZ
EdQcz6Y+lEvssWKD8DKb8h6usaV8DTbdX285gdheG4h2EcHyd9nUz5zCpvrI
x2zqo0lnv4/+FXnkmROMp8Y1q/naqtpTa7xiJ+BdJfYN+9G07Eq137MpX+Uj
2/XqHU1jC7uLCCz+htezOJ8AvXP8qxYBOexyomDnN5vOGyhgi1iirzbO/zlj
uKhYYdN6aWln6EFBHFbp/JlybOpfcWTXE4E1KnZ7seCpY4t2K3uTMyT93tpl
KZrqJ13YIuasrQdbGq+wpfON2C3EgLs6O7mNeKI7Q0PR1o5e+uNp6vy6bLo/
NmCLcsPHjdnUD9uc/fKSw7a6fmwxWs/0dwaqc0PT+YTt2B7FHKLaB7J7TMJv
dBc21TH2YFO/cB9ncKJCJ6t0fs8ANuVvBLOp/yqUHSAW4MPYtJ42ih3bFW8Y
Y50hslwpv+NoGm5PYC+sF3p/0hQ25eTPYEv7zewVVzYH357PpvNFwp2B9iXF
/UIcJLGMTf2QkeyDS3BCvYZN6x//Y8+NXmp/eJMz/CMOAkFT3NQ2NrXn7WJ3
8veOqBHNdgibU7/UATadZ3WYTX0ER5zhdR8x0Mf30+fAuM0n2FSveoY9UNyw
49kTz1ev5JvApvMgrrCpHyAJr3dRx4Wm8y9vsKXzD9j0eTxgU//sYzbVD6bj
9f1KHARilfLhn7Ol+nv2hRIqjTmLTXVpH9iUN/GFTf3W35xBug9YzdTn+ZPd
mm6gbPeZeActYBcswS+Yrct/zhFlXiXYluKr06+WcZH6Z8T9UMyXyrMLauGI
XsmmNnMtm9Y1jOx+IhjSxQWoj9/WKu+vs9Pd10Vsq8iu8q1C9paqbHqc1WBT
/VVtdk391+2b6rsAtcuiT7c/2nBbIzatPzdjHxDHR7Vk16yXOiLan037Ge3Y
fTuObh4X6AJ0voCt/Pq7si8m+XS92JNNxw71ZYvukVtBbFF+8Cjk//19l1cn
Xw51gX9miZMxrWaxnPdpBFt0w/0aw6bzsSawqb19CruyiLua4QJ0zIX492l+
w6bx3AK2iP9os5hN+0PL2U1HnQkavpJN9alrXYD2MdC07rqBvUk/yG37FrZ0
Xhub6jV2s6W+AzbFVB5ygWv/Fjj4o2m/Jo4ttnfVJ9i07nqGTbm68WyRstsz
ga0TBxJdwet9ZR+8FK1S/3gy+276GP2Wm2yan91lU39bCpvOq0xlTxdBt09d
gOLB0DRufcmm2KA37EfHT10KeM+m/N1P/+/vU97I//v7f3r32vLDBaRzZK3S
/k0ue+rjsfH38tmFrfI+f7Rx/c+7RcxLCXZVEQNexhUicHQyDn3ry79X/Mqz
u9MEgU3zTS17y2b8Y2TT+asubLrePVxBygfF+5U4dqAiu7Jo8PdmU463D1uk
+3Suwxbta6N92ZRH2NgVqKwKTXXozdkUa+bH/lHwcFp2G7YobyzTgU3rs53Z
+gvvqwV0dwXqO0bT/kRvNq3z9Wf3EkE0wWzKGwhlP7qxKPhDGJvyfke7AtVV
oylX6h+2tvGRYx0msen8q2nsY8sb1Fk1i019VvPYgeJ4jEWuIJbl96Cpjnop
m84vi2Qf/GMT7buGPZwWmtgU67KZbefst37LdlfwFQuD4vPeptx7MYpN97e9
bLpNHWJTv3ccu75YSD/uCgcai5V6q/mnWO4/zb5vvnxt+Xk23V8usWk/OZFN
+UZJ7Ip0AJIrGIuaZyai6Xzwu2w6vzGFfR5f/exUNq3HPmVT/s4LNvVHZboC
jbts5fHNezbl0nxiJ4v4cSt7j2jX/cEOPbf30epcNg3g8/H6p+c4zr/iW/98
bOP2n6l+wI4t7aezpfPG2VQHrWQPFzNgrRuI7vPXtn+f52w7cUN2YYvY708e
bKqHqMTerGr3o443m+o3fNyA/p74vMVwtg5bKRZSfNmfh4iRIPvft+boF83Z
dJ5kKzb177Z1A9q3t5Xn+x3YVE/QmZ131rdHRHc21eP0Zm8ok/Dwbn/2hOUr
33wLdgPqOy+Gn7co2B/CdniqG+o7nE39UqPZh6qJzn/24pixP7dNYlM92TQ3
oGMP0J4FOZNfzmIXzk4KLz6ffSlwbo5XOJvq65ax+4mAuUi2OG5s+Ro32C/a
atE5X8SEiE3L75vZa0UH43b2WHi3RLmb7SMa3faxvwT3HdHtkBtIOYJW6Xyr
OPbyo6+y1x9ni1OATp9mV7IdOTLtPJvahS+xRXuu6YobUFsZeihNFNg03LrJ
tr3s3GzOXTb1d6aw6Xi5VHYLarh0A2pTQ9My2Us2nQf/hk31IO/Z0vOb7Wz9
HbLIyha34+gf+H0QbW9oqifLZVO+Qz5bHP+80Mb9P4vy+HXF2HSepx2b1t9L
ugPV4aHnPu8RnViaHdzmWMaDsmzRnpBpz6Z6LQc2XW9KNo2/1O5AddfoWj+/
7/PUshViwUHPtorj94zsu9VxBu/EplxKFzad++HmDlfmr64+CE318B7suiKO
04stThuOqsimuv7K7NaiAakqu8Lg9hXuV3MH2vdHT6ED5Ng906b6W2uyaRmk
DntJF7zj1GPT+VC+7HPJD5b4NHQHintFS/UbbNofasoWadJBzdnSeZZsyjf0
Yz8Nz2oc2dodRFv2XHT8ZxGYwKZ6pwA23T/bs6lfqyM7tl7VEs86sWm82MUd
lq/7g/8yft4i/qIbW2wv2vdk0/ngvdl0/mdf9r1vTc826c+meLMgdxDD2P+h
6bzeYPY4724ho0PY1N8ayo6KmrtgxVD2/DIZ57eGsUNEAf8IdznfySrlk45i
03xsDFuUk2eMY9NzZDxbnBpRMJFNfeBT8Psg9q2KyevV09hSXiP7zj/Fm5tn
seOeBE/pPIdN+7/z2OL4wXEL8PtADzZ5fW8RO/7egP1rFrO3Njz3Imopm/Yb
lrMpJyuCTTmIK92Bll3RVJa9mr23nUh4Y4cfC3cvtZ4t4qoMG9miW8N7M5v6
n7e6Qz1qpJI/7+1syl/cyaZ5QhSb+ib3sIcPaKhYu5dN5/vux+/DtymLUsT3
WxRsHmSLeIykw2zaL4xli2Nqso+wKVfrmDvQNjKa8qNPsun7fZpN671n2ffX
DChsdZ4tbSCwaf58yR3onGO0OG13JrDpfOlE9u6g8P/tvMreOSV31PEkNj0v
rrM3HnhuenLDXcovQf/vctdvH26xaf58h03rGvfZy+xxQpDCprzBR2za3051
BzpGHk15nWnsDR4rJ49/yvZYF7Et/Bmbzod+wT7gUrgl5hVbxLVApjvQMcvF
cb5g8+f9w7fsthN+O2a/Y1N/VTabpqef2O+Sfiyq+IVN/TxWd+giHqTF5fnk
Nzadt/6DTcOvHLaIn1iZy5bOf2Znt9I/PJOP1z+dw201i+Xk24Vs2h+x8fjP
dP5zMTbld5Rgi/b/CqXYVD9UxgOkum2cr878drRLOTadL16ePVEEnDuyqf9O
yab8RzV7+L175staD9ibLhrhcfwqCtb0bOpPMrI/rt76qqQzm3L9XdnUL+rO
ppxSTw+gPgP0nlslNw+pwKbzdSuxtzqlqDdUYd/fMLFqnDe7pGiIqs6m+YCP
B1DdB5qOWazFTqxn76asy5bOu2YHZIRmt2rAlvI52WI4NaWJB+RVPtunK5r6
DZqx3yzccfuQmU35ri3ZSzLsG7xsxU4rffVjnj/7XGRJqy7AA0ZTobDVLFJJ
ardnf2iOT6iObOqn68SmPKEubMp36MamnJMeHvD86Jiuw9BU392LTX2Jfdg0
P+7PFnEmtYPY1GcW7AGdaaPBahZxgWNC2DSfCmXT/GIoWyzv/hvG/tLPr/n7
EWy6vkZ7gJQLhPNFcVDNWLZN3JDkNv+wqQ56AptyQyexKc9xCvtsiwWvk6fh
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
ygv+DySD/ok=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImageSize->Full,
  ImageSizeRaw->Automatic,
  Method->{},
  PlotRange->{{0, 1.00135}, {-9.94071, 2.00852}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.64463315297567*^9, 3.6446332485023193`*^9}, {
   3.644633281318087*^9, 3.6446333492190933`*^9}, 3.6446338215280848`*^9, 
   3.644646666592387*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnQmUW1UZgMO0M00XoGx2hSnFFoQigoJWkU0oiwp4wIWD2A6loWxhzwEh
CG0oS4AStqk4bGGJitNisNNlQIsOcObgqIFD8ESJx3AcHTRHw4kaNXp9d3vv
5r3/3fsnoUPhvJwzk5nk/t//3/+/97777va+2HPVyhWX9Fx1wfKeeSde0XPZ
yguWXzlvyaVXWB9N2CkUmlAIhTrOnReif5NQSP5yvd6kv0KhPdnbBBKJROQ3
7qQvvQ9TNiTc4awLUgYpxzXlziIlqddItVpj/01ES4fZWyepFfpJJJohVfF1
JZ8NdVB5SklkSVlQOpokTybVfMZKLcmjJGVJZovUzhoZiEdIfKBIrUdSQ12k
OJCyTI2RWIz/RCNRki1UO6S+gqKvmiOxSJ+0nlRGekmsL4fRt0E45tGNr5Fl
qwfIN27ayN7TG18L7W7bUiuPkmKxSEqlEvuhf5erdWlLvdhoSzyq2JLrc2zp
BNq0HwgjqQVUu/Vj/cd/W1bYhu/Krelib1Mtt+ZJMpYi2UzCiailOxqJkXyN
yxQyMRJJo/ywXiRZyi1osIJ+5rJiEnubQkZHMowaifWLyFdIJhohvUOjloWj
pM/6Lp2vYA2YRDXuxlXYBauQZRmsiIS10hCJU5XWT7xvyCpeBJ1BlY+oeoFM
IBPI7AgyUGfw/ZeLQCaQ2T4y/SLJppeL9uW7szXEslUDbSHC4yQzyb+P1BRi
9/dABmrO3luLAplAJpAJZIIWKpAJZAIZe7yxVq0SPtyIGm/0cKayty5CKgXS
G+PDNvQnlc2ROm1nWkey4a2+EZ6qViDxSJTkqi0hO9nbNL9BR5JPR0k0nePS
1TxTNSJUQYN6T8MKpvqNJFrQAh/VspRTXCyTb8vdfHi0j4xZ/5ZzaTlE2I67
OTJFRi1rx4Z65Yhn60jqkzIZ6I2JQhEjA/lyS7nekStSIBPIBDKKTNC1DGQC
mUBmx5UJWqhAxk9GTtd7RtqbR3hG2ptEhFuQkaPmPYkBO9301hBbLA+0g9gj
kHlPZKDW7f2Xi0AmkAlkGobpanUugxhB8XCcEZkKGUhF7WG63m3FNnhdpDSY
IJF4li8Oq4ywATXcGJ0HaRyjy1hm94oxOjJGUpGYPUbXoiq/0bpCPx+zSqUz
pDdueSreTxf8+Q4Hfk/YoK7x6wS8lU/HSHKgQEaLeZLLF0hprIIcJGUDjmEA
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\
\>"]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.644629205869339*^9, 3.644629213097727*^9}, {
  3.644629372806041*^9, 3.644629395153022*^9}, {3.644631272862673*^9, 
  3.6446312733884563`*^9}, {3.644631304784708*^9, 3.644631312226667*^9}, {
  3.644633157581658*^9, 3.6446331631950817`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6446331728611507`*^9, 3.644633172876607*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fitted", "=", 
  RowBox[{"LinearModelFit", "[", 
   RowBox[{"sneplt", ",", "x", ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.644633404874651*^9, 3.6446334112318983`*^9}, {
  3.644633731190987*^9, 3.644633763947254*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{"2.2901014702670364`", "\[VeryThinSpace]", "-", 
       RowBox[{"4.330052782329898`", " ", "x"}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Linear", {
     2.2901014702670364`, -4.330052782329898}, {{$CellContext`x}, {
      1, $CellContext`x}}, {0, 0}}, CompressedData["
1:eJztxTENACEURMEPTlCCBySQUGOdAgHAmbhmNnk7pc82ckSk2373bVWSJEmS
JPmfB5/bUow=
    "], CompressedData["
1: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
3J97WQ==
    "], CompressedData["
1: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
    "], 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`x}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.64463341342003*^9, {3.644633745165169*^9, 3.64463376488933*^9}, 
   3.644633838185298*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fittedPlt", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Normal", "@", "fitted"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.644633766367074*^9, 3.644633803298256*^9}, 
   3.6446339170582848`*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.64463391993925*^9, 3.644633921345756*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"fittedPlt", ",", "snepl", ",", 
   RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.644633840996072*^9, 3.644633879377315*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVxXk4lHkcAPB3xrOSo2yryViUmswi1SMqS33fVs5xLENTnrI9dFC6nuIx
bYXVdJEj1lYkDBU7D2NRhPm9mnG1xTgGK8uQJsfkzdSQWczu/vF5PlbhZ4KO
UjEM8/vP//scHe8kJkJ2e7mECdYFUfH3ZfvCh+mOsC52WVRkABWnGchSK+l7
YV4o3Cj0peKbnU2KH9CDodRa5yF4UvHvpduEd+hHwHDVk4wwVypO5IidbtMv
gHR8JjbXmoonJSbH3aJfBU42b4/pPxT8yAWSfpOeBcdnBL0riyi4XpZ3wceZ
IkgszW4LfY/hz6QOnp6W5ZDWdMyUuQPD9ycNDoiTq8Am5xBXaqKFMxXn7e9+
rgW7ig1s/bxFUKX3tlIoCFYnPx3zwBegtbEZdbi+gNkT8ctcmjQQxfU2OqCU
QDNjp8w0cB4alztoBada4HJhQ+i8eg4e8SVLZhtfwiZr7rmMy7OA0xoK2WWv
QHKKgm+yVIN9y2BNs20HeKVxa4VNn6AHZ0+XTEtB8pQpUQaoIFr/ZJdsaxfY
FBZes/v0Ef7s5zSsSO0GfebjKjfVNLA99o+MjfVAXsN4hY6hErbnJ3PyGb1A
HRRbtnEmQL6U2RMZ3wfBugZli5EKeOfdwaeJ+yGuZkqwQ/AWhPeGuZ1WA3Ar
dme7vEoOxTd0btpcfANKadut59lvQB0ROnmsbhAiJSH7RcxeMNh7LahizRAQ
HbUn8t2kcMn4neHIwWFIkBXUmF1vAkORHdbnJ4f86geKpEvVsCs2YFGskQNG
vaLvnXMF5Ral8DfkjkDCDqvkRvQMhYU4vl7OGgXhGota2+oWVC07mimaHQXT
8F9LM0s6kfMrIVWR/RZqvouiXzfpQ+vcj6kz945BXN8Rt9zPg8jJ0SmjSjEG
vnU0T/bOETSsut3G570DjJND442/RcptgTy6gwJaFZViz24Fsp6yn6R0K6B+
2oHyVcoEkjBius4mvgfJpLs5O16J0npkEUGMcfgShlpycBKRbCKDKhmH0jRB
qp7mI/ojZLWb87kJGIpye2JwToX4r5MejK6ahM0JRvqGHZ/QXMvBn1e9mISr
6QUDwT5qJM9AauPTU6BsdseqRLNottOF/ssKJUQ7W5w2NvuCzmatJ7j1Spgt
FvlU35lHa16vNx4L+wB3/TPPcFQaxJYJFsyXPoCPRdzEStYCUv1UED1YOg26
Cusu48ZFhA6X81b4kjAwqaez0lKLnndEs4b8SbDNSt+3kaFFT3fbfl0WSMLF
XaalLrZaJDAvzvXjkEBLZwZGbtei+/33K1PCSQhy8njY6K9FMT9eG9HnktAe
n+RyIV6L7PBDu5Y9IkFksnT+L7kWWZeb6fQ9IUFfxGshFVq03rK/9dHvJIQd
N/pW94MWmS4EBXtUkKCpNX/hMK9FujVeJ3n1JOSUW+g162HEyBbHezrdJPQF
u+5ba4URg3kzYd0yEuJtsARbBkb0G5Uz+P0kMJfEJU5MjGifshH+MERCzGPW
IsseI+ofr21JnCDhG01oUZwzRtTQ/k4JVJJQ127ZnuSKEZW8+0FWJAkR/NG5
VMCI0ojVQ8RnEip9T7CK3TGiuKuLnz5HwgGrzTFCL4zI35MedVhDAmV2Jq+O
hRG5Qr8tWxdJKHlZ3drsjxG/rTVQa7UkBDzkqjoDMeJf7cl5YQ==
      "]]}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.008333333333333333],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
3J97WQ==
       "]]}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Full,
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {-2.039951223694437, 2.2901013818986122`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.644633853805139*^9, 3.644633879765113*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solMSW", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"2", "c", " ", "s"}], " ", "\[Equal]", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"2", 
          SubscriptBox["\[Theta]", "v"]}], "]"}], "/", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          SuperscriptBox[
           OverscriptBox["\[CapitalDelta]", "^"], "2"], "+", "1", "-", 
          RowBox[{"2", 
           OverscriptBox["\[CapitalDelta]", "^"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", 
             SubscriptBox["\[Theta]", "v"]}], "]"}]}]}], "]"}]}]}], "&&", 
      RowBox[{
       RowBox[{
        RowBox[{"c", "^", "2"}], "-", 
        RowBox[{"s", "^", "2"}]}], "==", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", 
            SubscriptBox["\[Theta]", "v"]}], "]"}], "-", 
          OverscriptBox["\[CapitalDelta]", "^"]}], ")"}], "/", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          SuperscriptBox[
           OverscriptBox["\[CapitalDelta]", "^"], "2"], "+", "1", "-", 
          RowBox[{"2", 
           OverscriptBox["\[CapitalDelta]", "^"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", 
             SubscriptBox["\[Theta]", "v"]}], "]"}]}]}], "]"}]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "s"}], "}"}]}], "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.644725256264626*^9, 3.6447252973454523`*^9}, {
  3.644725354775172*^9, 3.644725493738858*^9}, {3.644725564110549*^9, 
  3.644725564307652*^9}, {3.644725955820663*^9, 3.644726075085979*^9}, {
  3.644726136280204*^9, 3.644726169326981*^9}, {3.6447272106237926`*^9, 
  3.644727239197414*^9}, {3.644727304641588*^9, 3.644727348480356*^9}, {
  3.644727487067925*^9, 3.644727525769993*^9}, {3.644728693131535*^9, 
  3.644728705146172*^9}, {3.6456449766588287`*^9, 3.645644977032782*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "\[Rule]", 
      FractionBox[
       SqrtBox[
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Theta]", "v"]}], "]"}]}], "+", 
           OverscriptBox["\[CapitalDelta]", "^"], "+", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
              OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
             SuperscriptBox[
              OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
             OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
            SuperscriptBox[
             OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]]}]], 
       SqrtBox["2"]]}], ",", 
     RowBox[{"s", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Csc", "[", 
          RowBox[{"2", " ", 
           SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Theta]", "v"]}], "]"}], "-", 
           OverscriptBox["\[CapitalDelta]", "^"], "+", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
              OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
             SuperscriptBox[
              OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], ")"}], " ", 
         SqrtBox[
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Theta]", "v"]}], "]"}]}], "+", 
             OverscriptBox["\[CapitalDelta]", "^"], "+", 
             SqrtBox[
              RowBox[{"1", "-", 
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", 
                  SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
                OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
               SuperscriptBox[
                OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], 
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
               OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
              SuperscriptBox[
               OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]]}]]}], 
        SqrtBox["2"]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        SqrtBox[
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Theta]", "v"]}], "]"}]}], "+", 
            OverscriptBox["\[CapitalDelta]", "^"], "+", 
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
               OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
              SuperscriptBox[
               OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
              OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
             SuperscriptBox[
              OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]]}]], 
        SqrtBox["2"]]}]}], ",", 
     RowBox[{"s", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{"2", " ", 
          SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Theta]", "v"]}], "]"}], "-", 
          OverscriptBox["\[CapitalDelta]", "^"], "+", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
             OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
            SuperscriptBox[
             OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], ")"}], " ", 
        SqrtBox[
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Theta]", "v"]}], "]"}]}], "+", 
            OverscriptBox["\[CapitalDelta]", "^"], "+", 
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
               OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
              SuperscriptBox[
               OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
              OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
             SuperscriptBox[
              OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]]}]]}], 
       SqrtBox["2"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        SqrtBox[
         FractionBox[
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Theta]", "v"]}], "]"}], "-", 
           OverscriptBox["\[CapitalDelta]", "^"], "+", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
              OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
             SuperscriptBox[
              OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
             OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
            SuperscriptBox[
             OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]]], 
        SqrtBox["2"]]}]}], ",", 
     RowBox[{"s", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Csc", "[", 
          RowBox[{"2", " ", 
           SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
         SqrtBox[
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Theta]", "v"]}], "]"}], "-", 
            OverscriptBox["\[CapitalDelta]", "^"], "+", 
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
               OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
              SuperscriptBox[
               OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
              OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
             SuperscriptBox[
              OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Theta]", "v"]}], "]"}]}], "+", 
           OverscriptBox["\[CapitalDelta]", "^"], "+", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
              OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
             SuperscriptBox[
              OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], ")"}]}], 
        SqrtBox["2"]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "\[Rule]", 
      FractionBox[
       SqrtBox[
        FractionBox[
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Theta]", "v"]}], "]"}], "-", 
          OverscriptBox["\[CapitalDelta]", "^"], "+", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
             OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
            SuperscriptBox[
             OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], 
         SqrtBox[
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
            OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
           SuperscriptBox[
            OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]]], 
       SqrtBox["2"]]}], ",", 
     RowBox[{"s", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{"2", " ", 
          SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
        SqrtBox[
         FractionBox[
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Theta]", "v"]}], "]"}], "-", 
           OverscriptBox["\[CapitalDelta]", "^"], "+", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
              OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
             SuperscriptBox[
              OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
             OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
            SuperscriptBox[
             OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Theta]", "v"]}], "]"}]}], "+", 
          OverscriptBox["\[CapitalDelta]", "^"], "+", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
             OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
            SuperscriptBox[
             OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], ")"}]}], 
       SqrtBox["2"]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.644725463475473*^9, 3.644725511126974*^9}, 
   3.644725573653459*^9, 3.644726086568664*^9, {3.6447261417661867`*^9, 
   3.6447261697745113`*^9}, 3.644727256688978*^9, 3.6447273662631607`*^9, 
   3.6447275453575287`*^9, 3.6447278901263657`*^9, {3.6447287041895227`*^9, 
   3.644728719517165*^9}, 3.645644986125269*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"c", "/.", 
  RowBox[{"solMSW", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"s", "/.", 
  RowBox[{"solMSW", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6447286654743853`*^9, 3.64472867086255*^9}, {
  3.644728711380369*^9, 3.644728716210725*^9}, {3.644728879538384*^9, 
  3.644728880903631*^9}}],

Cell[BoxData[
 FractionBox[
  SqrtBox[
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Theta]", "v"]}], "]"}]}], "+", 
      OverscriptBox["\[CapitalDelta]", "^"], "+", 
      SqrtBox[
       RowBox[{"1", "-", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
         OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
        SuperscriptBox[
         OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], 
     SqrtBox[
      RowBox[{"1", "-", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
        OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
       SuperscriptBox[
        OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]]}]], 
  SqrtBox["2"]]], "Output",
 CellChangeTimes->{{3.644728663551962*^9, 3.644728671601552*^9}, 
   3.644728719774851*^9, 3.644728881389673*^9, 3.645645117186883*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"Csc", "[", 
     RowBox[{"2", " ", 
      SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Theta]", "v"]}], "]"}], "-", 
      OverscriptBox["\[CapitalDelta]", "^"], "+", 
      SqrtBox[
       RowBox[{"1", "-", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
         OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
        SuperscriptBox[
         OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], ")"}], " ", 
    SqrtBox[
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           SubscriptBox["\[Theta]", "v"]}], "]"}]}], "+", 
        OverscriptBox["\[CapitalDelta]", "^"], "+", 
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
           OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
          SuperscriptBox[
           OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], 
       SqrtBox[
        RowBox[{"1", "-", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
          OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
         SuperscriptBox[
          OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]]}]]}], 
   SqrtBox["2"]]}]], "Output",
 CellChangeTimes->{{3.644728663551962*^9, 3.644728671601552*^9}, 
   3.644728719774851*^9, 3.644728881389673*^9, 3.645645117193873*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"c", "/.", 
       RowBox[{"solMSW", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      OverscriptBox["\[CapitalDelta]", "^"]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      OverscriptBox["\[CapitalDelta]", "^"], ",", "0", ",", "0"}], "}"}]}], 
   "]"}], "//", "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"c", "/.", 
       RowBox[{"solMSW", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      OverscriptBox["\[CapitalDelta]", "^"]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      OverscriptBox["\[CapitalDelta]", "^"], ",", "0", ",", "1"}], "}"}]}], 
   "]"}], "//", "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"s", "/.", 
       RowBox[{"solMSW", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      OverscriptBox["\[CapitalDelta]", "^"]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      OverscriptBox["\[CapitalDelta]", "^"], ",", "0", ",", "1"}], "}"}]}], 
   "]"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.644726173003326*^9, 3.644726301485297*^9}, {
  3.644726345194961*^9, 3.6447263614036627`*^9}, {3.644727858927031*^9, 
  3.6447278682473288`*^9}, {3.6447287355566072`*^9, 3.6447287418749437`*^9}, {
  3.644729197160668*^9, 3.644729198229273*^9}, {3.644730605457964*^9, 
  3.6447306556900682`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "v"], "]"}], "2"], " ", 
    SqrtBox[
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        SubscriptBox["\[Theta]", "v"], "]"}], "2"]}]]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      OverscriptBox["\[CapitalDelta]", "^"], "]"}], "1"],
    SeriesData[
     OverHat[$CellContext`\[CapitalDelta]], 0, {}, 0, 1, 1],
    Editable->False]}],
  SeriesData[
   OverHat[$CellContext`\[CapitalDelta]], 0, {Cos[
       Subscript[$CellContext`\[Theta], $CellContext`v]]^2 (-Sin[
         Subscript[$CellContext`\[Theta], $CellContext`v]]^2)^Rational[1, 2]},
    0, 1, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.6447262456297894`*^9, 3.644726301839856*^9}, {
   3.6447263537130527`*^9, 3.644726362529999*^9}, 3.644727890455071*^9, 
   3.644728742840458*^9, 3.644729198565179*^9, {3.6447306120899563`*^9, 
   3.6447306561336412`*^9}, 3.6456451217984877`*^9, 3.645645268729533*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "v"], "]"}], "2"], " ", 
    SqrtBox[
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        SubscriptBox["\[Theta]", "v"], "]"}], "2"]}]]}], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "v"], "]"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"5", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Theta]", "v"]}], "]"}]}]}], ")"}], " ", 
    SqrtBox[
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        SubscriptBox["\[Theta]", "v"], "]"}], "2"]}]], " ", 
    OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      OverscriptBox["\[CapitalDelta]", "^"], "]"}], "2"],
    SeriesData[
     OverHat[$CellContext`\[CapitalDelta]], 0, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[
   OverHat[$CellContext`\[CapitalDelta]], 0, {Cos[
       Subscript[$CellContext`\[Theta], $CellContext`v]]^2 (-Sin[
         Subscript[$CellContext`\[Theta], $CellContext`v]]^2)^Rational[1, 2], 
    Rational[1, 2] Cos[
       Subscript[$CellContext`\[Theta], $CellContext`v]]^2 (-1 + 
     5 Cos[2 Subscript[$CellContext`\[Theta], $CellContext`v]]) (-Sin[
         Subscript[$CellContext`\[Theta], $CellContext`v]]^2)^Rational[1, 2]},
    0, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.6447262456297894`*^9, 3.644726301839856*^9}, {
   3.6447263537130527`*^9, 3.644726362529999*^9}, 3.644727890455071*^9, 
   3.644728742840458*^9, 3.644729198565179*^9, {3.6447306120899563`*^9, 
   3.6447306561336412`*^9}, 3.6456451217984877`*^9, 3.6456452687345057`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     RowBox[{"Cot", "[", 
      SubscriptBox["\[Theta]", "v"], "]"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "v"], "]"}], "2"]}], ")"}], 
      RowBox[{"3", "/", "2"}]]}]}], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"5", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           SubscriptBox["\[Theta]", "v"]}], "]"}]}]}], ")"}], " ", 
      RowBox[{"Cot", "[", 
       SubscriptBox["\[Theta]", "v"], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "v"], "]"}], "2"]}], ")"}], 
       RowBox[{"3", "/", "2"}]]}], ")"}], " ", 
    OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      OverscriptBox["\[CapitalDelta]", "^"], "]"}], "2"],
    SeriesData[
     OverHat[$CellContext`\[CapitalDelta]], 0, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[
   OverHat[$CellContext`\[CapitalDelta]], 0, {-Cot[
      Subscript[$CellContext`\[Theta], $CellContext`v]] (-Sin[
         Subscript[$CellContext`\[Theta], $CellContext`v]]^2)^Rational[3, 2], 
    Rational[-1, 2] (1 + 
     5 Cos[2 Subscript[$CellContext`\[Theta], $CellContext`v]]) Cot[
      Subscript[$CellContext`\[Theta], $CellContext`v]] (-Sin[
         Subscript[$CellContext`\[Theta], $CellContext`v]]^2)^Rational[3, 2]},
    0, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.6447262456297894`*^9, 3.644726301839856*^9}, {
   3.6447263537130527`*^9, 3.644726362529999*^9}, 3.644727890455071*^9, 
   3.644728742840458*^9, 3.644729198565179*^9, {3.6447306120899563`*^9, 
   3.6447306561336412`*^9}, 3.6456451217984877`*^9, 3.645645268738409*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"2", 
      SubscriptBox["\[Theta]", "v"]}], "]"}], "/", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      SuperscriptBox[
       OverscriptBox["\[CapitalDelta]", "^"], "2"], "+", "1", "-", 
      RowBox[{"2", 
       OverscriptBox["\[CapitalDelta]", "^"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", 
         SubscriptBox["\[Theta]", "v"]}], "]"}]}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     OverscriptBox["\[CapitalDelta]", "^"], ",", "0", ",", "1"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"2", 
        SubscriptBox["\[Theta]", "v"]}], "]"}], "-", 
      OverscriptBox["\[CapitalDelta]", "^"]}], ")"}], "/", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      SuperscriptBox[
       OverscriptBox["\[CapitalDelta]", "^"], "2"], "+", "1", "-", 
      RowBox[{"2", 
       OverscriptBox["\[CapitalDelta]", "^"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", 
         SubscriptBox["\[Theta]", "v"]}], "]"}]}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     OverscriptBox["\[CapitalDelta]", "^"], ",", "0", ",", "1"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.6447292291598473`*^9, 3.644729278760297*^9}, {
  3.644729449523365*^9, 3.644729449906076*^9}, {3.6456448165059767`*^9, 
  3.645644829293681*^9}, {3.645644872949308*^9, 3.6456448840115633`*^9}, {
  3.6456449172564993`*^9, 3.645644947052083*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", 
     SubscriptBox["\[Theta]", "v"]}], "]"}], "+", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", 
      SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", 
      SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
    OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      OverscriptBox["\[CapitalDelta]", "^"], "]"}], "2"],
    SeriesData[
     OverHat[$CellContext`\[CapitalDelta]], 0, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[
   OverHat[$CellContext`\[CapitalDelta]], 0, {
    Sin[2 Subscript[$CellContext`\[Theta], $CellContext`v]], 
    Cos[2 Subscript[$CellContext`\[Theta], $CellContext`v]] 
    Sin[2 Subscript[$CellContext`\[Theta], $CellContext`v]]}, 0, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.644729249163945*^9, 3.644729279502293*^9, 3.64472945106485*^9, {
   3.645644818944537*^9, 3.6456448306341543`*^9}, {3.645644879551128*^9, 
   3.645644884524705*^9}, {3.645644927568549*^9, 3.645644947592081*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", 
     SubscriptBox["\[Theta]", "v"]}], "]"}], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"4", " ", 
      SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
    OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      OverscriptBox["\[CapitalDelta]", "^"], "]"}], "2"],
    SeriesData[
     OverHat[$CellContext`\[CapitalDelta]], 0, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[
   OverHat[$CellContext`\[CapitalDelta]], 0, {
    Sin[2 Subscript[$CellContext`\[Theta], $CellContext`v]], Rational[1, 2] 
    Sin[4 Subscript[$CellContext`\[Theta], $CellContext`v]]}, 0, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.644729249163945*^9, 3.644729279502293*^9, 3.64472945106485*^9, {
   3.645644818944537*^9, 3.6456448306341543`*^9}, {3.645644879551128*^9, 
   3.645644884524705*^9}, {3.645644927568549*^9, 3.645644947596801*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", 
     SubscriptBox["\[Theta]", "v"]}], "]"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Theta]", "v"]}], "]"}], "2"]}], ")"}], " ", 
    OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      OverscriptBox["\[CapitalDelta]", "^"], "]"}], "2"],
    SeriesData[
     OverHat[$CellContext`\[CapitalDelta]], 0, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[
   OverHat[$CellContext`\[CapitalDelta]], 0, {
    Cos[2 Subscript[$CellContext`\[Theta], $CellContext`v]], -1 + 
    Cos[2 Subscript[$CellContext`\[Theta], $CellContext`v]]^2}, 0, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.644729249163945*^9, 3.644729279502293*^9, 3.64472945106485*^9, {
   3.645644818944537*^9, 3.6456448306341543`*^9}, {3.645644879551128*^9, 
   3.645644884524705*^9}, {3.645644927568549*^9, 3.645644947600464*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", 
     SubscriptBox["\[Theta]", "v"]}], "]"}], "-", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", 
       SubscriptBox["\[Theta]", "v"]}], "]"}], "2"], " ", 
    OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      OverscriptBox["\[CapitalDelta]", "^"], "]"}], "2"],
    SeriesData[
     OverHat[$CellContext`\[CapitalDelta]], 0, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[
   OverHat[$CellContext`\[CapitalDelta]], 0, {
    Cos[2 Subscript[$CellContext`\[Theta], $CellContext`v]], -
    Sin[2 Subscript[$CellContext`\[Theta], $CellContext`v]]^2}, 0, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.644729249163945*^9, 3.644729279502293*^9, 3.64472945106485*^9, {
   3.645644818944537*^9, 3.6456448306341543`*^9}, {3.645644879551128*^9, 
   3.645644884524705*^9}, {3.645644927568549*^9, 3.645644947603981*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", 
   RowBox[{"2", " ", 
    SubscriptBox["\[Theta]", "v"]}], "]"}], "-", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", 
      SubscriptBox["\[Theta]", "v"]}], "]"}], "2"], " ", 
   OverscriptBox["\[CapitalDelta]", "^"]}]}]], "Input",
 CellChangeTimes->{{3.645646831350093*^9, 3.645646855449833*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solLZ", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"2", "c", " ", "s"}], " ", "\[Equal]", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", 
          SubscriptBox["\[Theta]", "v"]}], "]"}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
         OverscriptBox["\[CapitalDelta]", "^"]}]}]}], "&&", 
      RowBox[{
       RowBox[{
        RowBox[{"c", "^", "2"}], "-", 
        RowBox[{"s", "^", "2"}]}], "==", " ", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          SubscriptBox["\[Theta]", "v"]}], "]"}], "-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Theta]", "v"]}], "]"}], "2"], " ", 
         OverscriptBox["\[CapitalDelta]", "^"]}]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "s"}], "}"}]}], "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.644730895487872*^9, 3.64473089972544*^9}, {
  3.645646766487421*^9, 3.645646863201353*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "\[Rule]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Theta]", "v"]}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Theta]", "v"]}], "]"}]}], ")"}], " ", 
          OverscriptBox["\[CapitalDelta]", "^"]}], "-", 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox[
              OverscriptBox["\[CapitalDelta]", "^"], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Theta]", "v"]}], "]"}], "2"]}]}]]}]}]]}]}], 
     ",", 
     RowBox[{"s", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{"2", " ", 
          SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Theta]", "v"]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"4", " ", 
               SubscriptBox["\[Theta]", "v"]}], "]"}]}], ")"}], " ", 
           OverscriptBox["\[CapitalDelta]", "^"]}], "-", 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{
              SuperscriptBox[
               OverscriptBox["\[CapitalDelta]", "^"], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", 
                 SubscriptBox["\[Theta]", "v"]}], "]"}], "2"]}]}]]}]}]], " ", 
        
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"4", " ", 
               SubscriptBox["\[Theta]", "v"]}], "]"}]}], ")"}], " ", 
           OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Theta]", "v"]}], "]"}], "+", 
             SqrtBox[
              RowBox[{"1", "+", 
               RowBox[{
                SuperscriptBox[
                 OverscriptBox["\[CapitalDelta]", "^"], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", 
                   SubscriptBox["\[Theta]", "v"]}], "]"}], "2"]}]}]]}], 
            ")"}]}]}], ")"}]}], 
       RowBox[{"4", "+", 
        RowBox[{"4", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
         OverscriptBox["\[CapitalDelta]", "^"]}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "\[Rule]", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Theta]", "v"]}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Theta]", "v"]}], "]"}]}], ")"}], " ", 
          OverscriptBox["\[CapitalDelta]", "^"]}], "-", 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox[
              OverscriptBox["\[CapitalDelta]", "^"], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Theta]", "v"]}], "]"}], "2"]}]}]]}]}]]}]}], 
     ",", 
     RowBox[{"s", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Csc", "[", 
          RowBox[{"2", " ", 
           SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Theta]", "v"]}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"4", " ", 
                SubscriptBox["\[Theta]", "v"]}], "]"}]}], ")"}], " ", 
            OverscriptBox["\[CapitalDelta]", "^"]}], "-", 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{
               SuperscriptBox[
                OverscriptBox["\[CapitalDelta]", "^"], "2"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", 
                  SubscriptBox["\[Theta]", "v"]}], "]"}], "2"]}]}]]}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"4", " ", 
                SubscriptBox["\[Theta]", "v"]}], "]"}]}], ")"}], " ", 
            OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Theta]", "v"]}], "]"}], "+", 
              SqrtBox[
               RowBox[{"1", "+", 
                RowBox[{
                 SuperscriptBox[
                  OverscriptBox["\[CapitalDelta]", "^"], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", 
                   RowBox[{"2", " ", 
                    SubscriptBox["\[Theta]", "v"]}], "]"}], "2"]}]}]]}], 
             ")"}]}]}], ")"}]}], 
        RowBox[{"4", "+", 
         RowBox[{"4", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
          OverscriptBox["\[CapitalDelta]", "^"]}]}]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "\[Rule]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Theta]", "v"]}], "]"}]}], ")"}], " ", 
          OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Theta]", "v"]}], "]"}], "+", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{
               SuperscriptBox[
                OverscriptBox["\[CapitalDelta]", "^"], "2"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", 
                  SubscriptBox["\[Theta]", "v"]}], "]"}], "2"]}]}]]}], 
           ")"}]}]}]]}]}], ",", 
     RowBox[{"s", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cot", "[", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Theta]", "v"]}], "]"}], "-", 
          RowBox[{
           OverscriptBox["\[CapitalDelta]", "^"], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Theta]", "v"]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"Csc", "[", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{
              SuperscriptBox[
               OverscriptBox["\[CapitalDelta]", "^"], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", 
                 SubscriptBox["\[Theta]", "v"]}], "]"}], "2"]}]}]]}]}], ")"}],
         " ", 
        SqrtBox[
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"4", " ", 
               SubscriptBox["\[Theta]", "v"]}], "]"}]}], ")"}], " ", 
           OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Theta]", "v"]}], "]"}], "+", 
             SqrtBox[
              RowBox[{"1", "+", 
               RowBox[{
                SuperscriptBox[
                 OverscriptBox["\[CapitalDelta]", "^"], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", 
                   SubscriptBox["\[Theta]", "v"]}], "]"}], "2"]}]}]]}], 
            ")"}]}]}]]}], 
       RowBox[{"2", "+", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
         OverscriptBox["\[CapitalDelta]", "^"]}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "\[Rule]", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Theta]", "v"]}], "]"}]}], ")"}], " ", 
          OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Theta]", "v"]}], "]"}], "+", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{
               SuperscriptBox[
                OverscriptBox["\[CapitalDelta]", "^"], "2"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", 
                  SubscriptBox["\[Theta]", "v"]}], "]"}], "2"]}]}]]}], 
           ")"}]}]}]]}]}], ",", 
     RowBox[{"s", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cot", "[", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Theta]", "v"]}], "]"}]}], "+", 
          RowBox[{
           OverscriptBox["\[CapitalDelta]", "^"], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Theta]", "v"]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Csc", "[", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{
              SuperscriptBox[
               OverscriptBox["\[CapitalDelta]", "^"], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", 
                 SubscriptBox["\[Theta]", "v"]}], "]"}], "2"]}]}]]}]}], ")"}],
         " ", 
        SqrtBox[
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"4", " ", 
               SubscriptBox["\[Theta]", "v"]}], "]"}]}], ")"}], " ", 
           OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Theta]", "v"]}], "]"}], "+", 
             SqrtBox[
              RowBox[{"1", "+", 
               RowBox[{
                SuperscriptBox[
                 OverscriptBox["\[CapitalDelta]", "^"], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", 
                   SubscriptBox["\[Theta]", "v"]}], "]"}], "2"]}]}]]}], 
            ")"}]}]}]]}], 
       RowBox[{"2", "+", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
         OverscriptBox["\[CapitalDelta]", "^"]}]}]]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.644730900034298*^9, 3.6456468684904633`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"s", "/.", "solLZ"}], ",", 
    RowBox[{"{", 
     RowBox[{
      OverscriptBox["\[CapitalDelta]", "^"], ",", "0", ",", "1"}], "}"}]}], 
   "]"}], "//", "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"c", "/.", "solLZ"}], ",", 
    RowBox[{"{", 
     RowBox[{
      OverscriptBox["\[CapitalDelta]", "^"], ",", "0", ",", "1"}], "}"}]}], 
   "]"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.6456469118659077`*^9, 3.645646959545216*^9}, {
  3.6456469896026173`*^9, 3.6456469928488092`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     RowBox[{
      RowBox[{"Cot", "[", 
       SubscriptBox["\[Theta]", "v"], "]"}], " ", 
      SqrtBox[
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "v"], "]"}], "2"]}]]}], "+", 
     RowBox[{
      RowBox[{"Cot", "[", 
       SubscriptBox["\[Theta]", "v"], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "v"], "]"}], "2"]}], ")"}], 
       RowBox[{"3", "/", "2"}]], " ", 
      OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", 
        OverscriptBox["\[CapitalDelta]", "^"], "]"}], "2"],
      SeriesData[
       OverHat[$CellContext`\[CapitalDelta]], 0, {}, 0, 2, 1],
      Editable->False]}],
    SeriesData[
     OverHat[$CellContext`\[CapitalDelta]], 0, {Cot[
        Subscript[$CellContext`\[Theta], $CellContext`v]] (-Sin[
           Subscript[$CellContext`\[Theta], $CellContext`v]]^2)^
       Rational[1, 2], Cot[
        Subscript[$CellContext`\[Theta], $CellContext`v]] (-Sin[
           Subscript[$CellContext`\[Theta], $CellContext`v]]^2)^
       Rational[3, 2]}, 0, 2, 1],
    Editable->False], ",", 
   InterpretationBox[
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       RowBox[{"Cot", "[", 
        SubscriptBox["\[Theta]", "v"], "]"}], " ", 
       SqrtBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "v"], "]"}], "2"]}]]}]}], "-", 
     RowBox[{
      RowBox[{"Cot", "[", 
       SubscriptBox["\[Theta]", "v"], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "v"], "]"}], "2"]}], ")"}], 
       RowBox[{"3", "/", "2"}]], " ", 
      OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", 
        OverscriptBox["\[CapitalDelta]", "^"], "]"}], "2"],
      SeriesData[
       OverHat[$CellContext`\[CapitalDelta]], 0, {}, 0, 2, 1],
      Editable->False]}],
    SeriesData[
     OverHat[$CellContext`\[CapitalDelta]], 0, {-Cot[
        Subscript[$CellContext`\[Theta], $CellContext`v]] (-Sin[
           Subscript[$CellContext`\[Theta], $CellContext`v]]^2)^
       Rational[1, 2], -Cot[
        Subscript[$CellContext`\[Theta], $CellContext`v]] (-Sin[
           Subscript[$CellContext`\[Theta], $CellContext`v]]^2)^
       Rational[3, 2]}, 0, 2, 1],
    Editable->False], ",", 
   InterpretationBox[
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       SqrtBox[
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          SubscriptBox["\[Theta]", "v"], "]"}], "2"]], " ", 
       RowBox[{"Tan", "[", 
        SubscriptBox["\[Theta]", "v"], "]"}]}]}], "-", 
     RowBox[{
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "v"], "]"}], " ", 
      SqrtBox[
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         SubscriptBox["\[Theta]", "v"], "]"}], "2"]], " ", 
      RowBox[{"Sin", "[", 
       SubscriptBox["\[Theta]", "v"], "]"}], " ", 
      OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", 
        OverscriptBox["\[CapitalDelta]", "^"], "]"}], "2"],
      SeriesData[
       OverHat[$CellContext`\[CapitalDelta]], 0, {}, 0, 2, 1],
      Editable->False]}],
    SeriesData[
     OverHat[$CellContext`\[CapitalDelta]], 0, {-(Cos[
          Subscript[$CellContext`\[Theta], $CellContext`v]]^2)^Rational[1, 2] 
      Tan[
        Subscript[$CellContext`\[Theta], $CellContext`v]], -Cos[
        Subscript[$CellContext`\[Theta], $CellContext`v]] (Cos[
          Subscript[$CellContext`\[Theta], $CellContext`v]]^2)^Rational[1, 2] 
      Sin[
        Subscript[$CellContext`\[Theta], $CellContext`v]]}, 0, 2, 1],
    Editable->False], ",", 
   InterpretationBox[
    RowBox[{
     RowBox[{
      SqrtBox[
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         SubscriptBox["\[Theta]", "v"], "]"}], "2"]], " ", 
      RowBox[{"Tan", "[", 
       SubscriptBox["\[Theta]", "v"], "]"}]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "v"], "]"}], " ", 
      SqrtBox[
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         SubscriptBox["\[Theta]", "v"], "]"}], "2"]], " ", 
      RowBox[{"Sin", "[", 
       SubscriptBox["\[Theta]", "v"], "]"}], " ", 
      OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", 
        OverscriptBox["\[CapitalDelta]", "^"], "]"}], "2"],
      SeriesData[
       OverHat[$CellContext`\[CapitalDelta]], 0, {}, 0, 2, 1],
      Editable->False]}],
    SeriesData[
     OverHat[$CellContext`\[CapitalDelta]], 0, {(Cos[
          Subscript[$CellContext`\[Theta], $CellContext`v]]^2)^Rational[1, 2] 
      Tan[
        Subscript[$CellContext`\[Theta], $CellContext`v]], Cos[
        Subscript[$CellContext`\[Theta], $CellContext`v]] (Cos[
          Subscript[$CellContext`\[Theta], $CellContext`v]]^2)^Rational[1, 2] 
      Sin[
        Subscript[$CellContext`\[Theta], $CellContext`v]]}, 0, 2, 1],
    Editable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.64564692304653*^9, 3.645646960248294*^9}, 
   3.645646993766871*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     RowBox[{"-", 
      SqrtBox[
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "v"], "]"}], "2"]}]]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cot", "[", 
        SubscriptBox["\[Theta]", "v"], "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "v"], "]"}], "2"]}], ")"}], 
       RowBox[{"3", "/", "2"}]], " ", 
      OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", 
        OverscriptBox["\[CapitalDelta]", "^"], "]"}], "2"],
      SeriesData[
       OverHat[$CellContext`\[CapitalDelta]], 0, {}, 0, 2, 1],
      Editable->False]}],
    SeriesData[
     OverHat[$CellContext`\[CapitalDelta]], 0, {-(-Sin[
           Subscript[$CellContext`\[Theta], $CellContext`v]]^2)^
       Rational[1, 2], Cot[
         Subscript[$CellContext`\[Theta], $CellContext`v]]^2 (-Sin[
           Subscript[$CellContext`\[Theta], $CellContext`v]]^2)^
       Rational[3, 2]}, 0, 2, 1],
    Editable->False], ",", 
   InterpretationBox[
    RowBox[{
     SqrtBox[
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         SubscriptBox["\[Theta]", "v"], "]"}], "2"]}]], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Theta]", "v"]}], "]"}]}], ")"}], " ", 
       OverscriptBox["\[CapitalDelta]", "^"]}], 
      RowBox[{"8", " ", 
       SqrtBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "v"], "]"}], "2"]}]]}]], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", 
        OverscriptBox["\[CapitalDelta]", "^"], "]"}], "2"],
      SeriesData[
       OverHat[$CellContext`\[CapitalDelta]], 0, {}, 0, 2, 1],
      Editable->False]}],
    SeriesData[
     OverHat[$CellContext`\[CapitalDelta]], 0, {(-Sin[
          Subscript[$CellContext`\[Theta], $CellContext`v]]^2)^Rational[1, 2],
       Rational[1, 8] (-1 + 
       Cos[4 Subscript[$CellContext`\[Theta], $CellContext`v]]) (-Sin[
           Subscript[$CellContext`\[Theta], $CellContext`v]]^2)^
       Rational[-1, 2]}, 0, 2, 1],
    Editable->False], ",", 
   InterpretationBox[
    RowBox[{
     RowBox[{"-", 
      SqrtBox[
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         SubscriptBox["\[Theta]", "v"], "]"}], "2"]]}], "+", 
     RowBox[{
      SqrtBox[
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         SubscriptBox["\[Theta]", "v"], "]"}], "2"]], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        SubscriptBox["\[Theta]", "v"], "]"}], "2"], " ", 
      OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", 
        OverscriptBox["\[CapitalDelta]", "^"], "]"}], "2"],
      SeriesData[
       OverHat[$CellContext`\[CapitalDelta]], 0, {}, 0, 2, 1],
      Editable->False]}],
    SeriesData[
     OverHat[$CellContext`\[CapitalDelta]], 0, {-(Cos[
          Subscript[$CellContext`\[Theta], $CellContext`v]]^2)^
       Rational[1, 2], (Cos[
          Subscript[$CellContext`\[Theta], $CellContext`v]]^2)^Rational[1, 2] 
      Sin[
         Subscript[$CellContext`\[Theta], $CellContext`v]]^2}, 0, 2, 1],
    Editable->False], ",", 
   InterpretationBox[
    RowBox[{
     SqrtBox[
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        SubscriptBox["\[Theta]", "v"], "]"}], "2"]], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Theta]", "v"]}], "]"}]}], ")"}], " ", 
       OverscriptBox["\[CapitalDelta]", "^"]}], 
      RowBox[{"8", " ", 
       SqrtBox[
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          SubscriptBox["\[Theta]", "v"], "]"}], "2"]]}]], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", 
        OverscriptBox["\[CapitalDelta]", "^"], "]"}], "2"],
      SeriesData[
       OverHat[$CellContext`\[CapitalDelta]], 0, {}, 0, 2, 1],
      Editable->False]}],
    SeriesData[
     OverHat[$CellContext`\[CapitalDelta]], 0, {(Cos[
         Subscript[$CellContext`\[Theta], $CellContext`v]]^2)^Rational[1, 2], 
      Rational[1, 8] (Cos[
          Subscript[$CellContext`\[Theta], $CellContext`v]]^2)^
       Rational[-1, 2] (-1 + 
       Cos[4 Subscript[$CellContext`\[Theta], $CellContext`v]])}, 0, 2, 1],
    Editable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.64564692304653*^9, 3.645646960248294*^9}, 
   3.645646993976575*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        SubscriptBox["\[Theta]", "v"], "]"}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         SubscriptBox["\[Theta]", "v"], "]"}], 
        RowBox[{
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "v"], "]"}], "^", "2"}], 
        OverscriptBox["\[CapitalDelta]", "^"]}]}], ",", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         SubscriptBox["\[Theta]", "v"], "]"}]}], "-", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          SubscriptBox["\[Theta]", "v"], "]"}], "^", "2"}], 
        RowBox[{"Sin", "[", 
         SubscriptBox["\[Theta]", "v"], "]"}], 
        OverscriptBox["\[CapitalDelta]", "^"]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        SubscriptBox["\[Theta]", "v"], "]"}], "+", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          SubscriptBox["\[Theta]", "v"], "]"}], "^", "2"}], 
        RowBox[{"Sin", "[", 
         SubscriptBox["\[Theta]", "v"], "]"}], 
        OverscriptBox["\[CapitalDelta]", "^"]}]}], ",", 
      RowBox[{
       RowBox[{"Cos", "[", 
        SubscriptBox["\[Theta]", "v"], "]"}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         SubscriptBox["\[Theta]", "v"], "]"}], 
        RowBox[{
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "v"], "]"}], "^", "2"}], 
        OverscriptBox["\[CapitalDelta]", "^"]}]}]}], "}"}]}], "}"}], ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", 
        SubscriptBox["\[Theta]", "v"], "]"}]}], ",", 
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "v"], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        SubscriptBox["\[Theta]", "v"], "]"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"Sin", "[", 
        SubscriptBox["\[Theta]", "v"], "]"}]}]}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "//", "MatrixForm"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.6456501811460123`*^9, 3.645650418497305*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         SubscriptBox["\[Theta]", "v"], "]"}]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "v"], "]"}]}], "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "v"], "]"}], "2"], " ", 
          OverscriptBox["\[CapitalDelta]", "^"], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "v"], "]"}]}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", 
        SubscriptBox["\[Theta]", "v"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          SubscriptBox["\[Theta]", "v"], "]"}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "v"], "]"}], " ", 
          OverscriptBox["\[CapitalDelta]", "^"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            SubscriptBox["\[Theta]", "v"], "]"}], "2"]}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         SubscriptBox["\[Theta]", "v"], "]"}]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "v"], "]"}]}], "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "v"], "]"}], "2"], " ", 
          OverscriptBox["\[CapitalDelta]", "^"], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "v"], "]"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        SubscriptBox["\[Theta]", "v"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          SubscriptBox["\[Theta]", "v"], "]"}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "v"], "]"}], " ", 
          OverscriptBox["\[CapitalDelta]", "^"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            SubscriptBox["\[Theta]", "v"], "]"}], "2"]}]}], ")"}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         SubscriptBox["\[Theta]", "v"], "]"}]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "v"], "]"}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "v"], "]"}], "2"], " ", 
          OverscriptBox["\[CapitalDelta]", "^"], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "v"], "]"}]}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", 
        SubscriptBox["\[Theta]", "v"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          SubscriptBox["\[Theta]", "v"], "]"}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "v"], "]"}], " ", 
          OverscriptBox["\[CapitalDelta]", "^"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            SubscriptBox["\[Theta]", "v"], "]"}], "2"]}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        SubscriptBox["\[Theta]", "v"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "v"], "]"}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "v"], "]"}], "2"], " ", 
          OverscriptBox["\[CapitalDelta]", "^"], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "v"], "]"}]}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", 
        SubscriptBox["\[Theta]", "v"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          SubscriptBox["\[Theta]", "v"], "]"}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "v"], "]"}], " ", 
          OverscriptBox["\[CapitalDelta]", "^"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            SubscriptBox["\[Theta]", "v"], "]"}], "2"]}]}], ")"}]}]}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.645650401651124*^9, 3.6456504188699703`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"Cos", "[", 
        SubscriptBox["\[Theta]", "v"], "]"}], " ", 
       OverscriptBox["\[CapitalDelta]", "^"], " ", 
       RowBox[{"Sin", "[", 
        SubscriptBox["\[Theta]", "v"], "]"}]}], "1"},
     {
      RowBox[{"-", "1"}], 
      RowBox[{
       RowBox[{"Cos", "[", 
        SubscriptBox["\[Theta]", "v"], "]"}], " ", 
       OverscriptBox["\[CapitalDelta]", "^"], " ", 
       RowBox[{"Sin", "[", 
        SubscriptBox["\[Theta]", "v"], "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.645650401651124*^9, 3.64565041887632*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "@", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"x", "^", "2"}], "+", "1", "-", 
         RowBox[{"2", "x", " ", "i"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "0.2"}], "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"0.001", ",", "0.1", ",", "0.2", ",", "0.3", ",", "0.4"}], 
       "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.644786920723915*^9, 3.644787003974234*^9}, {
   3.644787044785183*^9, 3.644787054398369*^9}, {3.644787086315282*^9, 
   3.644787088196348*^9}, {3.644807852423455*^9, 3.644807867021673*^9}, 
   3.6448081368455753`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
AX52O+c=
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0.999},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
      PlotRange->{{0, 0.2}, {0.9999995001721846, 1.0196077669258459`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
uTSkTOD5FLZQk5K48P//h/wfNQVDnw==
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0.9948},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
      PlotRange->{{0, 0.2}, {0.9949874372256252, 0.9999999995918367}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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

         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0.979},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
      PlotRange->{{0, 0.2}, {0.9797958971132712, 0.9999999991836734}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwV0X0w1HkcB3DR0hNX25Y4Ls8nM0xRuShvT5U4LCoPXWWSUo2oEZdm1XUS
eto6pT1UnMSyaNlFyXPc72qTEucpcpYy+n1DZI647/3xmc+8Zj7zmc+8P4YH
InxDVVVUVDxp/d+zhiuiFBfXOayS+c/NzREkmHJlUt5SjKv/HdZBzd0cc/8a
zwAnxq1apdQBTXn6cby1GJUHF4dSTy+pDzzFc4RxVmvcs1kCRVHzl0geHw0d
alGpXwk2zmtrPM4Lxs/bC6vXThMMrwksDOdFInlbTk/YJEF4dKvnldpzMMwI
u24yQrBf89orjjIRMiNun6SfQKLq3t8cIcT6CYft8R0ENUFrRgvqU+Ahal0l
ayYQanI10hS30XZi6FlBI8Gp9HZrHasMtJj+aMJ5QkAsMxfxntwDm5LrJykh
ULXfM2dclQW74ZajK/IJDORqc2eGszG1so8zmEmQ/nbt+e7RHNwy0Jk9KSLY
c7c4mENysRzHyt2uE5i8+M49WjsfFWEC6dVEAg/xsjKiK0GR2Rb95HMEgs9j
Vg93FEG+J8RoJobg9LHlv+iXFWM8xKOgIoLgQElEwaD8IZxtF8eahhHwrV16
/J5L4Wjwg/KbYIKPGh3eW5tLMMslbHYAwTXeYFPnUCnUCg9pVvMJ/MLTw3dO
y+C+ZsDDaAdBo96KXb4zcow913xt7kzgoMZx/swtB0oVv1XaEYQ6lkXqaleg
OTm9n9jQPBmuwmTlI9jG3+4+aEn/l6S0em3xGA5OhzQjzAim7sW+4lhWQmNK
N2mZAcG/bMKZbtcnuJl65Jm3DoF+0mbfVP8qyBcsOP+KS/DpdOnRNv9qrBMc
URlcQjDw0qehe2MNvv41E5+hTmAutIgSltfgy4eJ2XcqNJ+Jdju5bS1Cqt65
hUyz2DnpOL+wthabrvRKhBMsfjW6xB52rkNZHZvm8onF+mFh17iiDvbKJW55
wyy29MR8cOLXw0iUmSpUsvCPttFSfVmPUDuFurSPxbhYvCElqAHe0qUHrnax
GFqkFve+qwHZh7tbBtpY7FXXZrTCnuLwsaXKmRYWAw/mLB6MPoXLwt29PgoW
9VGMZN7JRvw0ccNAh2Fh0uNlY/W1Ea4jFyLEDSx6ImUdemebUF84uVhcwyJH
/OmWYLYJATGd6W8rWYydHdpdnPgnhsx40cpyFrfOVdveX8hA27xtxFfGYn+H
8ULlYgZuKVZbXajNrRM7TbQY3O82vGdD/egfviCby+DFso69POrebf11f3zL
YJMgeepNKZ3X5HhlWTIgL2fEgdSPRe4H7/owGNSynx9SwiJ+rHBDrx+D7/Mn
i/yovTyWa6zezeBppuc+V+q+ma68O0EM8iSKOlPq+cHhJCOEgb1kZf57KZ03
E8amn2LgJW2eOk6tffazR3cMg9VNzi/2U/e1B+jrxTI4HuWTw6c+mWRYkxbH
YPqB0z5r6tQRKSftIr3/bfjHiYcsgrdqt3cmMbhtXNU+SG1x50yu7mUG8tXi
hnbqSm9Xj9+FDNw9d+VUUF/IzdXrvEH3J/DSxNRe8zRZnZsMnBIibqRRawed
qA5MZSDiH7p8mbpP+kYoEjHY8WEqUUD9H5CzgWE=
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0.9580000000000001},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
      PlotRange->{{0, 0.2}, {0.9591663050880835, 0.9999999987755102}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwV0Hs01HkYBnBk2Ein1bTTuKxc1imbWTtdlMqD0q7muES5xbLSYXNkyjXS
tKlwyjGVSCa1Vq65RLlE7o39bS6psE10250u2r5fRC3ZZn/7x3ue8znn+eM5
r2lIlOceDTU1NVf2/s+CscaY3tRv7ZfJTFQqFcWJr/Rv1HAXwXLF3pM9rPU3
xl/J5C7DWZMwfi5r3+5S48NcG4T8lGAnZP1xQadfLNcBn3bOSEM/UfRW9X8Q
cz1g35yUycxRrFUfku/jBmNGvfle1gzF2Aq/ykiuGEO7p6Jt3lFExj1wzWg/
goqqgccRSoogvcx7HGUaAg5Nj1f8QVGhse15f5QUtTaBe0Q9FG3+KyaudmYh
MFw5PttCIdXT187rPQ9H/KhZXkMRKxsW8gUXUR51Uzf6CgW1/kWHe+sy1MOv
Lc89T6GxYZfKvKUAa60LIxtPUSyrm6dKGivEzqYH/BkJheyxzdGRiSLkxdXX
fhNDsetSdTCHlkCZo09vhVNY9H25LY5XjgRJypsDARSiss/rqUEFngwKEpZu
p0iemhRcc6mCoNpwYGwLxcGIxT8b11ejz9npFG89RUht1NUXddcwu9lvnUBA
4SHcPOrVU4NuO62Ag2YUb7Ufujv310LsnL+knEeRyX3RrXh5HSsHEhJ4Cyi8
ImWROz7ewN3uuTUjahRyoyU7PefqEB9ytPHIewL7eRynKf0GrDY72xb2hmCP
Q73YgNcI74ls/tfPCCoY/V6LL27i7YdsJYYJPqYrBfetmrAvzHUiv4fgn8uJ
9zjWzXBPDTt+v4NglpxIGtlyC6lGOdd9GwiM0zd65vi04PRVb4GwkmD84PW9
Qz6tiLkgMVcUEvx1d3vXyNo2dEW5tCouECyXWsVIG9rge6jBqeg0QfL0sF2d
bTuelea/bkkj2PHeQbOyvR0ZdWGm6yQEKWYnSZhTB3iG0Zti4whWj0kfvevt
wHGDwAh+JMGm0fjXjh6dMFNUDSSHEvjErVqocbcTqgz57MoAgndlZWuy/Ltg
ozH9nciL4KXOvMOvHnUhU8vhopmIIFCLxywMvw1R9qKGKCd2b7HKqnjiNvqX
/nBIx46gM4apUD8gxzFO+ANvIYHFqNsqwb9y3Blsdze1IhgV33hoJOmGfdCO
c7lmBEVl49nJn7phdIaZ8DEkmJS89K5O+w1e1fIS2WKC7COttlfmM+A/7exK
XUAQ9NB8vlKXwQeRTBzOerkwTWGxkEFHHcfEhfXNPz2SC/UZbCg9maLD+snW
5x2/GjJwfR4akaHL9vU4bgXWDJqKverO6hA05W4LvbSdQXSi//qCzwiOTVau
eeLFQLg1xDaFtZtosbaJN4OiRXO2oayfzj0qzfdnkNyudLBkrRkcSS/uZlC8
/8z+Mm22bylNlMUyGFX5uNVqEfAkU6KReAYt4pTYLNZPh32NjRIZ7A1yvBTL
+kC6aVveYQaDgzGztqxz/q7h5KUyuK3Z1N/MIQh25g0r0hn87pikm8/aKj+p
xOAUg8kNfS4S1s3uW0QXpAzcUlf2ObI+XlJipDjDwPOVLdectZu6HuGfY/9n
ORSgyZrnv7/VL4dB2vfaJUpNdk/NoDQ3l0Gqz51pOev/AMHLZD4=
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0.936},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
      PlotRange->{{0, 0.2}, {0.9380831528348929, 0.9999999983673469}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.644786986074087*^9, 3.6447870044108152`*^9}, {
   3.644787049055822*^9, 3.644787054883821*^9}, 3.644787088845561*^9, {
   3.644807853815817*^9, 3.644807867391396*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"plt1", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"x", "^", "2"}], "+", "1", "-", 
      RowBox[{"2", "x", " ", "0.9"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1.8"}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"plt2", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"x", "^", "2"}], "+", "1", "-", 
       RowBox[{"2", "x", " ", "0.9"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1.8"}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.644808147067689*^9, 3.644808169791953*^9}, {
  3.644808213102825*^9, 3.644808266679525*^9}, {3.644808306771317*^9, 
  3.64480837163629*^9}, {3.644808754839628*^9, 3.644808915733551*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
97mln/hdRYUE///9/n8EkU+i
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.42},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1.8}, {0.4358899163575921, 0.9999999669387757}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.644808156175927*^9, {3.6448081934829407`*^9, 3.644808267234783*^9}, {
   3.644808307324668*^9, 3.644808372572113*^9}, {3.644808757318528*^9, 
   3.644808780477498*^9}, {3.644808819174142*^9, 3.644808901876143*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJw113k8VOv/APCRQrYsX2sloShSiQpdHwmXZGvRQgtxi1tpkZQltG+k3Cyh
olW2KyGVDyWlJEuKO2fINmNmzswZ+zb4nf74/XFe5/V+neX5PJ/nPJ/nOQv9
gjcHzGAwGJP08fs8Yuip/7F0v80/WrbC6WkKLYKK5Jw17ECp6Pws4QSFt/UX
py7U2AwqD/nWxAiFdoy9HQoafvBqgYfUK4rClCMTM2dqHAd5yXcqIe0UfnhU
oz6tHgtDG+v/Jyqn0Luy4J5Y/RaYsqZVGFEULnY38J9Qz4S48AfFsWIhWs2K
HylvLQTfta4a93oEKEv9uv5Y4g0sVrmq/raLxBkbbrfVRL6DihX6tVe5fNS4
6Bav5/MRvrnYCgJZPLR1HzzgxvkC/psOXbrL5qKEU4qJMLAezljVL9/W3os5
W4auFX9vhBtdgvDMDg76ZTqe7VVrBrmxB7lfxtjYZdId9eXSTwjO09beMpON
weOhKpr1rZD0JWbOiUU96PCiWp4tT8C3b1WjGZ7dyHnipxpwpg1WPr/pZR3S
hZ+psR+L9/4CfpRn44O8Trz47GD2iZQO4Gxgesd3dSCnxWKlRF0n3JB23Dls
1IFfn03GvBd0wVi6Z2rDpV+Ykszf0baoByKcJa8WNrQjz+j72DJnNgRli0Nk
P7dh1v6jqfPc2JCqaWzR/qENfTLkreW2sEEh/E5ccWUb1qk6RPT6sKFk2lv5
8Ks2/Hfq5VTmUTbYCvRDxp62Ydj3JEnNZDZ8KvBJvXm5DaWivRVmcNggtrCp
QOc2XPizU/fHeQ4waiJven9nYcG1TVW5VzgQPV9Xiapnoa1t8YELcRwokSvz
uPCVhXueXckzT+bA3ox0zbJqFqaFr1h3+zkH8ufFs+xfsVBTN2q7RyMHXMw8
FX9lsHBOoFbc5wW9MKZqdWXVIRZmzD+3MtOgFyQKYVg3kIWmjeT300t6QdhS
u175LxZusq6Yu2RVL1SeUw0b38vCqwoHnl1y7AVDZY8z1BYWShUWVdkf7oVl
+v/d9V/Hwslx94nysl6ofvQ+KGYOC1VSO45twF7QcvepGpdnoZHlid6P73sh
IdrpZagsC7eeutNcX9sL4c21e0NnsTB7gMjvbKP9zJ6XOEGgFxnoLyXJhczn
PoHuvQTmsc59dXXhwpXphJTy9wRWRajZN7pzoUVju971SgJb5z4p89rKBd7x
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
/8+tA0XvamvF8P//7/8H7W3OIg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -1.02},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1.8}, {-0.9999999669387757, -0.4358899163575921}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.644808156175927*^9, {3.6448081934829407`*^9, 3.644808267234783*^9}, {
   3.644808307324668*^9, 3.644808372572113*^9}, {3.644808757318528*^9, 
   3.644808780477498*^9}, {3.644808819174142*^9, 3.644808901918206*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", "x"}], "]"}], ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"3", "x"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
57aK
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
beH////div8BAMQ7Ow==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
D3ci
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> 
     NCache[{{0, 2 Pi}, {-0.9999998593152271, 0.9999998782428621}}, {{
        0, 6.283185307179586}, {-0.9999998593152271, 0.9999998782428621}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"sin", "(", "x", ")"}], 
       RowBox[{"sin", "(", 
         RowBox[{"2", " ", "x"}], ")"}], 
       RowBox[{"sin", "(", 
         RowBox[{"3", " ", "x"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.644808474439269*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     SqrtBox[
      RowBox[{
       SuperscriptBox["x", "2"], "+", "1", "-", 
       RowBox[{"0.2", "x"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "0.9"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"-", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["x", "2"], "+", "1", "-", 
        RowBox[{"0.2", "x"}]}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "0.2"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["x", "2"], "+", "1", "-", 
          RowBox[{"2", "x", " ", "0.9"}]}]]}], ",", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", "1", "-", 
         RowBox[{"2", "x", " ", "0.9"}]}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1.8"}], "}"}]}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.644808528278537*^9, 3.644808575924979*^9}, {
  3.644808627962904*^9, 3.644808696992155*^9}, {3.64480892141184*^9, 
  3.6448089411303453`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
LkzscBorq61lIEm8R8XFlYn/AQ8iOr0=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0.98},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
    
    PlotRange->{{0, 0.9}, {0.9949874448222729, 1.2767145219712375`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, -1.0002},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
    
    PlotRange->{{0, 0.2}, {-0.9999999995918367, -0.9949874372256252}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJw113k8VOv/APCRQrYsX2sloShSiQpdHwmXZGvRQgtxi1tpkZQltG+k3Cyh
olW2KyGVDyWlJEuKO2fINmNmzswZ+zb4nf74/XFe5/V+neX5PJ/nPJ/nOQv9
gjcHzGAwGJP08fs8Yuip/7F0v80/WrbC6WkKLYKK5Jw17ECp6Pws4QSFt/UX
py7U2AwqD/nWxAiFdoy9HQoafvBqgYfUK4rClCMTM2dqHAd5yXcqIe0UfnhU
oz6tHgtDG+v/Jyqn0Luy4J5Y/RaYsqZVGFEULnY38J9Qz4S48AfFsWIhWs2K
HylvLQTfta4a93oEKEv9uv5Y4g0sVrmq/raLxBkbbrfVRL6DihX6tVe5fNS4
6Bav5/MRvrnYCgJZPLR1HzzgxvkC/psOXbrL5qKEU4qJMLAezljVL9/W3os5
W4auFX9vhBtdgvDMDg76ZTqe7VVrBrmxB7lfxtjYZdId9eXSTwjO09beMpON
weOhKpr1rZD0JWbOiUU96PCiWp4tT8C3b1WjGZ7dyHnipxpwpg1WPr/pZR3S
hZ+psR+L9/4CfpRn44O8Trz47GD2iZQO4Gxgesd3dSCnxWKlRF0n3JB23Dls
1IFfn03GvBd0wVi6Z2rDpV+Ykszf0baoByKcJa8WNrQjz+j72DJnNgRli0Nk
P7dh1v6jqfPc2JCqaWzR/qENfTLkreW2sEEh/E5ccWUb1qk6RPT6sKFk2lv5
8Ks2/Hfq5VTmUTbYCvRDxp62Ydj3JEnNZDZ8KvBJvXm5DaWivRVmcNggtrCp
QOc2XPizU/fHeQ4waiJven9nYcG1TVW5VzgQPV9Xiapnoa1t8YELcRwokSvz
uPCVhXueXckzT+bA3ox0zbJqFqaFr1h3+zkH8ufFs+xfsVBTN2q7RyMHXMw8
FX9lsHBOoFbc5wW9MKZqdWXVIRZmzD+3MtOgFyQKYVg3kIWmjeT300t6QdhS
u175LxZusq6Yu2RVL1SeUw0b38vCqwoHnl1y7AVDZY8z1BYWShUWVdkf7oVl
+v/d9V/Hwslx94nysl6ofvQ+KGYOC1VSO45twF7QcvepGpdnoZHlid6P73sh
IdrpZagsC7eeutNcX9sL4c21e0NnsTB7gMjvbKP9zJ6XOEGgFxnoLyXJhczn
PoHuvQTmsc59dXXhwpXphJTy9wRWRajZN7pzoUVju971SgJb5z4p89rKBd7x
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
/8+tA0XvamvF8P//7/8H7W3OIg==
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
97mln/hdRYUE///9/n8EkU+i
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
    
    PlotRange->{{0, 1.8}, {-0.9999999669387757, 0.9999999669387757}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.644808555690237*^9, 3.644808576521689*^9}, {
   3.644808630754766*^9, 3.6448086977721977`*^9}, 3.6448089416478653`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["x", "2"], "+", "1", "-", 
        RowBox[{"2", "x", " ", "0.9"}]}]]}], ",", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["x", "2"], "+", "1", "-", 
       RowBox[{"2", "x", " ", "0.9"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1.8"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Energy Levels with Matter Interaction\\n cos2\[Theta]=0.9\>\""}], 
   ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*OverscriptBox[\(\[CapitalDelta]\), \(^\)]\)\>\"", ",", 
      "\"\<E\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.64480895454879*^9, 3.6448090600910273`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJw113k8VOv/APCRQrYsX2sloShSiQpdHwmXZGvRQgtxi1tpkZQltG+k3Cyh
olW2KyGVDyWlJEuKO2fINmNmzswZ+zb4nf74/XFe5/V+neX5PJ/nPJ/nOQv9
gjcHzGAwGJP08fs8Yuip/7F0v80/WrbC6WkKLYKK5Jw17ECp6Pws4QSFt/UX
py7U2AwqD/nWxAiFdoy9HQoafvBqgYfUK4rClCMTM2dqHAd5yXcqIe0UfnhU
oz6tHgtDG+v/Jyqn0Luy4J5Y/RaYsqZVGFEULnY38J9Qz4S48AfFsWIhWs2K
HylvLQTfta4a93oEKEv9uv5Y4g0sVrmq/raLxBkbbrfVRL6DihX6tVe5fNS4
6Bav5/MRvrnYCgJZPLR1HzzgxvkC/psOXbrL5qKEU4qJMLAezljVL9/W3os5
W4auFX9vhBtdgvDMDg76ZTqe7VVrBrmxB7lfxtjYZdId9eXSTwjO09beMpON
weOhKpr1rZD0JWbOiUU96PCiWp4tT8C3b1WjGZ7dyHnipxpwpg1WPr/pZR3S
hZ+psR+L9/4CfpRn44O8Trz47GD2iZQO4Gxgesd3dSCnxWKlRF0n3JB23Dls
1IFfn03GvBd0wVi6Z2rDpV+Ykszf0baoByKcJa8WNrQjz+j72DJnNgRli0Nk
P7dh1v6jqfPc2JCqaWzR/qENfTLkreW2sEEh/E5ccWUb1qk6RPT6sKFk2lv5
8Ks2/Hfq5VTmUTbYCvRDxp62Ydj3JEnNZDZ8KvBJvXm5DaWivRVmcNggtrCp
QOc2XPizU/fHeQ4waiJven9nYcG1TVW5VzgQPV9Xiapnoa1t8YELcRwokSvz
uPCVhXueXckzT+bA3ox0zbJqFqaFr1h3+zkH8ufFs+xfsVBTN2q7RyMHXMw8
FX9lsHBOoFbc5wW9MKZqdWXVIRZmzD+3MtOgFyQKYVg3kIWmjeT300t6QdhS
u175LxZusq6Yu2RVL1SeUw0b38vCqwoHnl1y7AVDZY8z1BYWShUWVdkf7oVl
+v/d9V/Hwslx94nysl6ofvQ+KGYOC1VSO45twF7QcvepGpdnoZHlid6P73sh
IdrpZagsC7eeutNcX9sL4c21e0NnsTB7gMjvbKP9zJ6XOEGgFxnoLyXJhczn
PoHuvQTmsc59dXXhwpXphJTy9wRWRajZN7pzoUVju971SgJb5z4p89rKBd7x
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
/8+tA0XvamvF8P//7/8H7W3OIg==
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
97mln/hdRYUE///9/n8EkU+i
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*OverscriptBox[\\(\[CapitalDelta]\\), \\(^\\)]\\)\"", 
     TraditionalForm], 
    FormBox["\"E\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Full,
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotLabel->FormBox[
   "\"Energy Levels with Matter Interaction\\n cos2\[Theta]=0.9\"", 
    TraditionalForm],
  PlotRange->{{0, 1.8}, {-0.9999999669387757, 0.9999999669387757}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.644808950030673*^9, 3.644809001382531*^9}, {
  3.644809037158855*^9, 3.644809060817634*^9}}]
}, Open  ]]
},
WindowSize->{1247, 743},
WindowMargins->{{-6, Automatic}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 91, 1, 35, "Input"],
Cell[CellGroupData[{
Cell[674, 25, 165, 3, 36, "Input"],
Cell[842, 30, 228, 3, 36, "Output"]
}, Open  ]],
Cell[1085, 36, 486, 10, 36, "Input"],
Cell[CellGroupData[{
Cell[1596, 50, 342, 6, 35, "Input"],
Cell[1941, 58, 307, 6, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2285, 69, 756, 19, 57, "Input"],
Cell[3044, 90, 46690, 779, 628, 39584, 662, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[49749, 872, 289, 4, 35, "Input"],
Cell[50041, 878, 94, 1, 35, "Input"],
Cell[CellGroupData[{
Cell[50160, 883, 251, 5, 36, "Input"],
Cell[50414, 890, 15825, 274, 50, "Output"]
}, Open  ]],
Cell[66254, 1167, 325, 9, 35, "Input"],
Cell[66582, 1178, 91, 1, 35, "Input"],
Cell[CellGroupData[{
Cell[66698, 1183, 209, 4, 36, "Input"],
Cell[66910, 1189, 12912, 223, 708, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79859, 1417, 1976, 50, 84, "Input"],
Cell[81838, 1469, 12282, 329, 519, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94157, 1803, 382, 9, 57, "Input"],
Cell[94542, 1814, 1074, 31, 126, "Output"],
Cell[95619, 1847, 1788, 51, 126, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97444, 1903, 1570, 44, 98, "Input"],
Cell[99017, 1949, 1073, 28, 48, "Output"],
Cell[100093, 1979, 1866, 50, 55, "Output"],
Cell[101962, 2031, 2017, 54, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104016, 2090, 1692, 47, 127, "Input"],
Cell[105711, 2139, 1155, 30, 39, "Output"],
Cell[106869, 2171, 1041, 27, 55, "Output"],
Cell[107913, 2200, 1110, 30, 42, "Output"],
Cell[109026, 2232, 1025, 27, 39, "Output"]
}, Open  ]],
Cell[110066, 2262, 377, 11, 39, "Input"],
Cell[CellGroupData[{
Cell[110468, 2277, 1227, 36, 59, "Input"],
Cell[111698, 2315, 12857, 373, 613, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124592, 2693, 632, 18, 70, "Input"],
Cell[125227, 2713, 5467, 152, 92, "Output"],
Cell[130697, 2867, 4907, 142, 140, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135641, 3014, 2257, 69, 91, "Input"],
Cell[137901, 3085, 4474, 130, 126, "Output"],
Cell[142378, 3217, 1110, 31, 136, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143525, 3253, 856, 22, 36, "Input"],
Cell[144384, 3277, 20286, 391, 1434, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164707, 3673, 948, 25, 57, "Input"],
Cell[165658, 3700, 6289, 114, 301, "Output"],
Cell[171950, 3816, 6357, 115, 298, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178344, 3936, 434, 14, 36, "Input"],
Cell[178781, 3952, 56942, 1007, 287, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235760, 4964, 1232, 39, 142, "Input"],
Cell[236995, 5005, 23642, 421, 163, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260674, 5431, 866, 26, 92, "Input"],
Cell[261543, 5459, 11748, 208, 755, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
