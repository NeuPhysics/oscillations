(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    130272,       2798]
NotebookOptionsPosition[    128418,       2733]
NotebookOutlinePosition[    128806,       2750]
CellTagsIndexPosition[    128763,       2747]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.644621988851782*^9, 3.64462199914039*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "@", 
  RowBox[{"NotebookDirectory", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.644621968530374*^9, 3.644622003851451*^9}}],

Cell[BoxData["\<\"/Users/leima/Dropbox/Research/git/15summer/code\"\>"], \
"Output",
 CellChangeTimes->{{3.6446219850925293`*^9, 3.6446220044031553`*^9}, {
   3.644628822463407*^9, 3.644628849085437*^9}, 3.6446466611943703`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sne", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<data/neordered.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6446219074909973`*^9, 3.644621961331574*^9}, {
  3.644622015331234*^9, 3.6446220222271442`*^9}, {3.644628856891851*^9, 
  3.644628865218534*^9}, {3.644629071328656*^9, 3.644629073284955*^9}, {
  3.6446291106240997`*^9, 3.6446291119873962`*^9}, {3.644629162789288*^9, 
  3.6446291876909122`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sne", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.644622039803378*^9, 3.644622043800436*^9}, {
  3.644629089845952*^9, 3.644629095381762*^9}, {3.644629130510089*^9, 
  3.644629157299677*^9}, {3.644629197284107*^9, 3.6446291988570223`*^9}, {
  3.644633264475381*^9, 3.6446332710737963`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00819005`", ",", "2.00852`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.644622044207594*^9, 3.644628867210965*^9, {3.6446290758213043`*^9, 
   3.644629157720818*^9}, {3.6446291903795643`*^9, 3.644629199239354*^9}, {
   3.644633265077075*^9, 3.644633271357647*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sneplt", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"sne", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "200", ",", 
       RowBox[{
        RowBox[{"Length", "@", "sne"}], "-", "1800"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"snepl", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"sne", ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.644633121726836*^9, 3.6446332478577623`*^9}, {
  3.6446332809070253`*^9, 3.6446333488498774`*^9}, {3.644633811218197*^9, 
  3.6446338191936007`*^9}, {3.644646646789858*^9, 3.6446466474774227`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.006944444444444445], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw0XHlcjN8Xbt+zhlARyRLK1x51IoQKKSJbQsiaLRJtthSVilKEVllKe5F7
WymltO97MzU187bvNb/7zvTzj8/TzLzzvveee85zznnOKFtc2X9GSEBAIF1S
QID+v/bJBmZXpgOsa5Girk0V0NFZVXTNRsIR5gwvTjxE8HeJ+J9iBo4wPmm7
ozbBiRWf/gV5OELjQovdKgS/u2wfvb/UETI32E+XIphr743kFZ3gavvlt6wp
AjoKLIXwwdNOMPft8aV/CD5u03St/4sTZO3bE/uJ4Ft/m0vkB53AWlgb3Aju
DHugfkbXGRTiV+RcJJjTdaSs2t0Znot1ztxJ8Hzjs86PapxBwDT61EKCKR9r
TcvlD+Ba2I2o8ckCOsxrtWaOdg+geWDdWAXBVfd1u+vyHsDBnUO74ggO/SP+
0WH+Q3Bf9/yQK8HhoSrtV288hN8qC8+eJNg57Z1BUPZDEJyeeHM9wfvEz03V
mf8INgkaPpAl2KTy8cnltwl+FmtSO0lAh/1kKPzmP4JnKyyKJNjWPN546fLH
sDnEuc+e4CHznyf1nhC8qj1zH8EXn04tym95DMJHFh1SINjd5oN9zbYn8OfB
CRZTVkBHuMpmxCLkCbz46mcXQ/BiIdfoS+IuoHwrtOAOwSMdVcFjVi4QpRWj
okNwbesp7fkFLqAtim+LEfy3b4F9ybqn4G0V+PyXjIDO8pPTipYFPgVW/v3g
JwSb3FYLXSHpCuJFGnbbCG5j33AruOEKKqWNxgIE75zc2jW/0RV0KrzVfkgL
6GjY2HzdaOQGx6p3CN8muPGpBoub6gaS9IYSfPc/bqv/mmfA/r5gsE5KQMd/
Pktb4OMz8B2+Y+xJ8PsPLFPNec9Bd+O/r1sJbhcdDjR99RziZoz84UiS9dot
P+vQVHeg3AcifAj+lKK9dNczd1gi1euymWAUue6Cj6gHWDzoPNckIaAT8XPP
9ofbPeBUAJJ8SLCPK3PBjUcesGz/yYvKBNedGr5y5bcHdIsL56eIC+g81nu8
3EbaExyP2PSYEKxd83TSi72eMCWyfVaHGFmP+xLmSd6eYPnuv/F7BJcq9W8V
rPKEH553micTnPHTOOH8ghfw/ueZPa9EBXSuJKiId1i9gIftRolKBDNGj5sE
xL4AK3ntBaEiAjqq7kKBttwXUO2QP3khwf9dnsx8pO8Fe9vMxwKFBXTOMu/7
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
BplutdkVMKMBtq5cbHr2Qhz6sKRgcbdKA6he2rt2nl0C4qUNaxrg5dVnNz65
JSGOz51PX3UboI1kk1JvviNKIWffDOMGIEFgdNWXFKTkVr7YwaIBFhA6vDgF
IY8y511d1g0gNt1e7iYDI37cbACruuoTWpxUNGNuj2ajRwOk0OliXxpaPD1B
yuJdA3BVtG2cxtLRPeasRa2RDVCSl1nXL5KJBIPXWV9DDQBrjyfvkslC0Tun
UwL5DRN+8xcKy3ZL8KltmKiL/UY5/2V8W8lpgNMqdx+8Vs5Gcx8k1fwZI9dT
3cOxWZKDIr/pm1yRbYRK5qqc1ep/kPUv/9GZio0g/yoiNnNtLjqZ+bE0bXkj
sETWTF23OQ/d/3Sz8drmRjAi6cGDrX9R3aXaDUsNGsFA4c786J35yFRFNbzh
SCO8eKH06ODiAsR7nAuNMHeSvjBEFKCxVV8MT91tBOIUk2au+IfUXDqcl7s2
wrf9W7aXRP5DV4qligZeN4L7asPy+/8VogZxpvGviEY4FtSiMzmuEDkudBTz
T26EneQUPF1fhPYsrmBdy2mE3lm2Ga1JRYhXrq8kn1+T+GXF5mL0uOr9yVWs
RphT73Tx8M9iVPNqNaGgjWD5n0L+WZ0StGtn8KVRySbYoZsVZJJWgoaLv+1u
m90ErcPaCirbSlHqgbc65UubQNGazlRLUTxdttvYBDOez/ex0CtDqXMLw/Gu
Jrju+OdU3u8yRLPb5MNNYLn6cfDM3eXoJMnSEs43QUeQsan2n3JUGylkl3Cn
Cchd79YxqEBPkoKtvrs0AS+tzKtAuxMWXUv1a4Lk6R3or2ElWvDx4Yvsj03g
IPtkiunfSjTVPeNPUVITfKm59T5pTxVacYyuUDUByTYmc/5WIV7aWtEEpryC
fDWKKDE1FWU1gZDa45kVf6tRr+u03lnDTeA64m7weE8NurDMNW2lVDPML7xC
lq4GDf1o/Kg3pxm8ss4pHjCsRW91Z0dYLGuGhM4fJhdza5EuXSbUbAbXfRdF
DfXr0Pi2M+mvdzdD0xid+NahgpjDfUlmzXDratT6VSr1KGgB2SGrZuAt16l6
dNNz6+FBW8J7nM/La38guLX3x1zXZvgYvEdnekM9Oq7/W1zLvxnue5xJzZjX
gPS++u8//qkZkvbnO+07TjCJoo7fm+EILwFsQDuOCswJ+dMM667VeHdXNiB1
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
lq/7g/8yft4i/qIbW2wv2vdk0/ngvdl0/mdf9r1vTc826c+meLMgdxDD2P+h
6bzeYPY4724ho0PY1N8ayo6KmrtgxVD2/DIZ57eGsUNEAf8IdznfySrlk45i
03xsDFuUk2eMY9NzZDxbnBpRMJFNfeBT8Psg9q2KyevV09hSXiP7zj/Fm5tn
seOeBE/pPIdN+7/z2OL4wXEL8PtADzZ5fW8RO/7egP1rFrO3Njz3Imopm/Yb
lrMpJyuCTTmIK92Bll3RVJa9mr23nUh4Y4cfC3cvtZ4t4qoMG9miW8N7M5v6
n7e6Qz1qpJI/7+1syl/cyaZ5QhSb+ib3sIcPaKhYu5dN5/vux+/DtymLUsT3
WxRsHmSLeIykw2zaL4xli2Nqso+wKVfrmDvQNjKa8qNPsun7fZpN671n2ffX
DChsdZ4tbSCwaf58yR3onGO0OG13JrDpfOlE9u6g8P/tvMreOSV31PEkNj0v
rrM3HnhuenLDXcovQf/vctdvH26xaf58h03rGvfZy+xxQpDCprzBR2za3051
BzpGHk15nWnsDR4rJ49/yvZYF7Et/Bmbzod+wT7gUrgl5hVbxLVApjvQMcvF
cb5g8+f9w7fsthN+O2a/Y1N/VTabpqef2O+Sfiyq+IVN/TxWd+giHqTF5fnk
Nzadt/6DTcOvHLaIn1iZy5bOf2Znt9I/PJOP1z+dw201i+Xk24Vs2h+x8fjP
dP5zMTbld5Rgi/b/CqXYVD9UxgOkum2cr878drRLOTadL16ePVEEnDuyqf9O
yab8RzV7+L175staD9ibLhrhcfwqCtb0bOpPMrI/rt76qqQzm3L9XdnUL+rO
ppxSTw+gPgP0nlslNw+pwKbzdSuxtzqlqDdUYd/fMLFqnDe7pGiIqs6m+YCP
B1DdB5qOWazFTqxn76asy5bOu2YHZIRmt2rAlvI52WI4NaWJB+RVPtunK5r6
DZqx3yzccfuQmU35ri3ZSzLsG7xsxU4rffVjnj/7XGRJqy7AA0ZTobDVLFJJ
ardnf2iOT6iObOqn68SmPKEubMp36MamnJMeHvD86Jiuw9BU392LTX2Jfdg0
P+7PFnEmtYPY1GcW7AGdaaPBahZxgWNC2DSfCmXT/GIoWyzv/hvG/tLPr/n7
EWy6vkZ7gJQLhPNFcVDNWLZN3JDkNv+wqQ56AptyQyexKc9xCvtsiwWvk6fh
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
ygv+DySD/ok=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImageSize->Full,
  ImageSizeRaw->Automatic,
  Method->{},
  PlotRange->{{0, 1.00135}, {-9.94071, 2.00852}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.64463315297567*^9, 3.6446332485023193`*^9}, {
   3.644633281318087*^9, 3.6446333492190933`*^9}, 3.6446338215280848`*^9, 
   3.644646666592387*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnQmUW1UZgMO0M00XoGx2hSnFFoQigoJWkU0oiwp4wIWD2A6loWxhzwEh
CG0oS4AStqk4bGGJitNisNNlQIsOcObgqIFD8ESJx3AcHTRHw4kaNXp9d3vv
5r3/3fsnoUPhvJwzk5nk/t//3/+/97777va+2HPVyhWX9Fx1wfKeeSde0XPZ
yguWXzlvyaVXWB9N2CkUmlAIhTrOnReif5NQSP5yvd6kv0KhPdnbBBKJROQ3
7qQvvQ9TNiTc4awLUgYpxzXlziIlqddItVpj/01ES4fZWyepFfpJJJohVfF1
JZ8NdVB5SklkSVlQOpokTybVfMZKLcmjJGVJZovUzhoZiEdIfKBIrUdSQ12k
OJCyTI2RWIz/RCNRki1UO6S+gqKvmiOxSJ+0nlRGekmsL4fRt0E45tGNr5Fl
qwfIN27ayN7TG18L7W7bUiuPkmKxSEqlEvuhf5erdWlLvdhoSzyq2JLrc2zp
BNq0HwgjqQVUu/Vj/cd/W1bYhu/Krelib1Mtt+ZJMpYi2UzCiailOxqJkXyN
yxQyMRJJo/ywXiRZyi1osIJ+5rJiEnubQkZHMowaifWLyFdIJhohvUOjloWj
pM/6Lp2vYA2YRDXuxlXYBauQZRmsiIS10hCJU5XWT7xvyCpeBJ1BlY+oeoFM
IBPI7AgyUGfw/ZeLQCaQ2T4y/SLJppeL9uW7szXEslUDbSHC4yQzyb+P1BRi
9/dABmrO3luLAplAJpAJZIIWKpAJZAIZe7yxVq0SPtyIGm/0cKayty5CKgXS
G+PDNvQnlc2ROm1nWkey4a2+EZ6qViDxSJTkqi0hO9nbNL9BR5JPR0k0nePS
1TxTNSJUQYN6T8MKpvqNJFrQAh/VspRTXCyTb8vdfHi0j4xZ/5ZzaTlE2I67
OTJFRi1rx4Z65Yhn60jqkzIZ6I2JQhEjA/lyS7nekStSIBPIBDKKTNC1DGQC
mUBmx5UJWqhAxk9GTtd7RtqbR3hG2ptEhFuQkaPmPYkBO9301hBbLA+0g9gj
kHlPZKDW7f2Xi0AmkAlkGobpanUugxhB8XCcEZkKGUhF7WG63m3FNnhdpDSY
IJF4li8Oq4ywATXcGJ0HaRyjy1hm94oxOjJGUpGYPUbXoiq/0bpCPx+zSqUz
pDdueSreTxf8+Q4Hfk/YoK7x6wS8lU/HSHKgQEaLeZLLF0hprIIcJGUDjmEA
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\
\>"]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.644629205869339*^9, 3.644629213097727*^9}, {
  3.644629372806041*^9, 3.644629395153022*^9}, {3.644631272862673*^9, 
  3.6446312733884563`*^9}, {3.644631304784708*^9, 3.644631312226667*^9}, {
  3.644633157581658*^9, 3.6446331631950817`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6446331728611507`*^9, 3.644633172876607*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fitted", "=", 
  RowBox[{"LinearModelFit", "[", 
   RowBox[{"sneplt", ",", "x", ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.644633404874651*^9, 3.6446334112318983`*^9}, {
  3.644633731190987*^9, 3.644633763947254*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{"2.2901014702670364`", "\[VeryThinSpace]", "-", 
       RowBox[{"4.330052782329898`", " ", "x"}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Linear", {
     2.2901014702670364`, -4.330052782329898}, {{$CellContext`x}, {
      1, $CellContext`x}}, {0, 0}}, CompressedData["
1:eJztxTENACEURMEPTlCCBySQUGOdAgHAmbhmNnk7pc82ckSk2373bVWSJEmS
JPmfB5/bUow=
    "], CompressedData["
1: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
3J97WQ==
    "], CompressedData["
1:eJxN2Xc8lt0fB3ASSrTsvUmESopklT0ij0jKSoUQDSMyE1EhHhmhQkJRZCsz
KyN7ZVVWskeyful5/e7Pff9zv96vc51znXOdc53xvbjN7U9ZbiIhIZkjJSHZ
+P/vNyV3bOLsK9qIArn/O5dzqpikFB6dvhW9Ng5PKw+FyDEVEpwho3oy5Dis
/M5/j4A9rGqf+7AnCrbZ1qBR8RFeHmkJb5iBzdXyltk4iwj+EeibHaMB/5sh
+VHbGWY2rJw+nggXDcg62jTBUhNh29vW4fvu1R999r1He//U7vpZuJCv/l5y
ABwhE/svZy687nTiztgQLCdZ/fAX/QeCDZxEstWU4Ey3c37r1+GYxAtSWxNh
2hmFhout8CWvm3fpyIoJDmTNeRzHCjdG9K4ZS8Bf+B1On9CCSyQHq+0uwrZn
3ouWecCTa87pRpFwmB/LHb5M+F0xB61QHZzuTlp0dRj2KCr1XiYtIbgufYik
hA3Wmr+w9vkwnFhUwiigBwe+nKOtt4NVmShE8u7Bj1J+CvxKgm1MUzcHlsH7
qAr2uPbDt9rjxYpW4czHHW7GrKUEN2uZ7zSUgkMjDr0pNoDDEtuW79+EJVRL
9KrC4fqTDmzO72DKceuZsFai/EWJMWIL8OewJ7d1GMswnp+2SUwegVd9VP3Y
zsJr1PZt/e7wBRl1fpmncOCgfptkBfypgUarcxTuS7DSkdhRTnCZmVW/yiG4
pc3flM0Y5r5xdLnGB06T8crQS4OF6nVVKlvhlCiuMVmSCoLFnv18nC8MV+uL
3NYzhAMEdMp5/GC+dzoHpN7BaY5PZ9K/w/sb34nFM34kmHOHu5OwBvz16pDB
NU94WHLgfGQOPOvY4V45Bfu2i9oeEakk2Pio7u7dVkRmC49OToT71W9e2TwI
By04c7NzVBHMUBzmRWYEV1E0VSSFw2tRabo7PsO7teL9lairCd7M/spaTQV2
kTYI2+0N191gsXpZCK/XL4zQLMLWDJedVPfXEGyYelNL1Qb2EGU5wJEI98ed
4q/phV3XOQU1mWoJnnGjaInWhddyV2eq78HHvwZw1ZfBpcspxskrcEtTD5XZ
oU8Ecz1+XjlpC5Ow3VowToKvn7eISO6FuR/2K9cw1BH8Xnustkkbnvi0uSzP
D87cKi7i8R6+1DpsLbwAp5tksGbvqyd4yJn8maAlTM09vOoRA3+821mb3QzX
am20qIFgi6Y+jQEFWDl7drXFGWYUCruTng537C0ZvDoETyvdKgze3oj2HDN2
7BGCLdzJHrEqwSkt416nTWGrazHdvrfgTwqNn1P+hVvl/C9UvYEz9L0rBj7B
ZJmKIRPD8LLc3aWZTZ8JrvhGIz7LDkvkMZH9OALfTLRM6NWDxTudMyrs4FHq
oMK0AFj1Kq9lYALs8mOl2/ID7HabiVumC+ZXyN1ENQ/XkRl+a9/RhPJ6pcKe
7oUvj8T1myvB/jPk+/hM4Vt0r1UGXGF57cfiUeEwub83s14G/KTzdSNlLSwh
3H238DscF6ZGY0vSTHA3/W9TZlZYyePyUPUh2JuEWfqmDvzBq/o+jw28vMl1
oP4OvC3mCplTPKzCzm7AWwCfzt7hUtsKPzpc/MlpCm7MvcrFt60F41ua+3oj
P6xW8LnSTR72k/FmFToLTyVOxXfegI12mAjcC4bLnetSpVNh45ol88kKeJZV
gCWhH87T30l2bhlOdcplZ2FoJTg20vRIuzgcXLBFL0wD/jO44vQvwms5oeys
XrBL6PW6b9Ewjz5d+ttsuIYxK9jzMxxfuivh1Dj8+dgPln2UbQRvyisPoeSB
zdiMpYdk4PFLb+iqDeCk6HKuDEc4P04vOO4+3PB8cP1BMizr/LPJrwzulshu
9+6FEztltvsswU8ubmz42tE/ZQqKYWLw1a3FconqMMfhFbt8S1jgUBZphyds
zLr341I0XDx6rpAzB/bwp2HQboIfLx5p9v0J92nzlH7Y0kHw3+0oH6zrl/JY
XQ6+dVHNM8oIJmW8UDtzA85K3zggwKVMIXuy0uBVq+fS7FVwybXJgdCv8FvL
pXzqdXhN0GPxAUsn+iffM4JZEnY9JG+VrAu3X5ZqPG4Lm/tOXf7qD/83f8HZ
dMELcsWw7tP8vF/dRNevmfbnLcKRwj7WPrRdmB+EuA31xWCtRemXYhrwF/cH
DxkuwVHjcS9IfeB+2h//LMXCerxzB+fz4ZM/JJNX2+BEn3mP7bOwwbhYgeCO
bqw3/ENn1IThXwxt951U4IIpn9mXFjCFj83EiAec9r1eUzwG7iK5Iu+bS1T+
uG9Efwusmsx8Smkaviux9+pbmh7U3+U6r8he2OGBtPRrZXjymlvWEQt4ftev
sgYP+LTnpKR9DCz3gkuONQ/2ja1LaWiFeS8uuATNwBpDhr36O75gfuaYbxcW
gTvlTpJRqMG2pE/npyxh40d2Gt+84cT5nM39cbDTzqN6I4VwwrIU+VInbBTn
qMmwCFvTCi4epevF+i1Pf9huP7wo49GVrA1fm+GhnbKBnU1JBo4HwB2xZ3bH
J8HF4eMdW8qJyj+3sSLBDT3HSxfX4HmRLd/d2fpQ/0MUT3ZKwz0Lx8bSDWA7
/+kogxtwQFNv/7ZH8Pq4yr2qDHj1w1hVSD3sq1EZc2kczmzeMcZD3o/5e9Tl
MAMdrN5oMrKLF56OJavddQCu0Lfso1eA53oUDXh0YGnD9WFxE7j7+eEeFTs4
pX3fJgt3OHF24Ix3ELzSt4s+JRq2LuYabU6BDzikclHkw3uo5gJkqmHNwN98
Th1w1sgTqtxh2JSnV3p9AZY60ROjTjGA91vRSS2GHn62p1Fwhg/e/6NCR1sC
ngh3SX19HJ5kq9Gh14M5gjoEPc3h4HYftWkHovK2/Yy56AXTs85KDwbDgrQ5
VObxsPswI/9IOkyaIOng+AF+q0o7SdIAv6gOygnvhWsOlL8RnYBZffO+1K7C
6W80/rGnGcT8URm9wsAOm1W8bCsVgW+n3hh0lIH7bHuPCGnCBnwCyQNn4b/N
sYFX97/SsrgFCweM+4gEwvYtVM2LUfAA5bBeZQrsxetFEZ0Pawt2jjnWwCaU
9cy6XfDd7qdm+8fgLxEH/2xBYTXVBNuVrV8J/t3yRn2UGS7Rj5XvEIKz36te
rpUiSmdtSi5WI8r/Z3ebfwY2e8DxIccK7k3f5JbjAvvnJVgXBMDqOfyOJZEw
z8s7odUv4V0Py2ub8+B95zYiVLAp55P8mU44pdXAgHwMngvcPcf4G7bZG1gq
SvWN4KXCwZcqLHDsceYU873w8ZqTKe7S8NoJy7Iodbgx88x8nhH8nOdPD1nD
N0IUz/xyJfLIXCFrIHxeo4ryWDSs8jr61PlUIpNrZ3sVwMrGJCyJtbDYh+YL
H7uJzOBXNfoDZnI5Q7ttBSbtETkvQv2d4GZ17mANNjgpj77UWgQ22zjgyMDs
6fJzCZpwqsLj7iJjmKd/Z0rLFdjnXorJqBv8Sd5yZTkIHt1ufonqCfxn85DH
8Aqu7Orr5CiCHb55VfHUweS/T8TyfYFl5YJ2cvyETYPnrOhXidLJi50paIYw
n4XU6c+ywSe0TRraReCRpWblG9Jwo6frQWtZOJeSm8tEEY57UEn9jzJ8l95u
SVUdNkw+VHdUG957dDVe9BS8XFd+nfs0/Mk0SJXOCH4yq8dGeZ6ovFCZ9kUz
ePd+/tARS6L8G/E+K6L62C1Q1tgS3Z+ZJCXXAa4v26r54gbsaEf7ZwmA1/lk
nbzd4WcNKswOXrCYn+Ozc3fgJNX3u1UD4APrI9ES9+GXJRLUnCEwp6+n29Zw
+Papn83Tj+FeLiPhrhj42ORH79J4oudTdLArJQH+HlHCFJIMizqeNHBKg500
v4SfyyCqz4GgAoUsuJvp6AB/LkyzPkpBVQjvmc6jHf8A/xf/glUHXOleV8Ka
fTZbHtTCul+MV2wbYNlhu3aNZlhk2vOtUDvMshx6n7Ib3kKeePl7L9zHshFR
IhqPMiItUUOwyXlP9+tjRM/bs0VAewKufqWWwz8DGw/3iS7PE70vXDeTGpdg
LyNqjqRVeDWuzM2FdJhgi+noUnVyuErx+ha2rfC+ME3tn9Sw20YAbCecZWT6
MIAO/lHm+vw0E0wjlR3LzQaLvp6OHOeEj4hpu73jhRUzUs7fFoS19lMqqAjD
e2sSp7eJwRvRlaYD8NflwVPhkvDf8K40bK9k7s0iC3MuKJJ2K8D1Sbye0Urw
pb8HLPhvuFUL9hpRi2zRgcneXBkK/ge2u5PBomEIl1nSS5IZw4zKrroFJrCs
LPdRewu4i2Pjixfcdkq+a90TppgZn3n1EPacenpCI5ao/4w8s1vTYH7eS2Yn
C+CTGx+0quHysYfi1B2wz5cMW90h+O/nhTn4zS8ts8RNIwRzc9cwZu2Ey7Ps
J9I54I3t3BMReO3nWxMnadgqNbRKVhVmr3K1nteHyXWCRCIt4MOHkwRFHOCY
gFHFtNuwxtFDEaxBsKhhyjbnSNioRTCvLAnOL6j3W8mEL2y6fZ+vBFbMOp0l
VU9U34rDdLLdRO3dCO+MEKWz62vtnIcVLoQI9JKO4v2jajsSvR3OYz1ho8QK
Gwblt/UKwsKXjcwtJWDV55sEu+XhjGOZfPJa8MGTr4WCz8BMG+E0S1jcN2Zx
3QEOzcx4wX4bFtSecNpzD6ZQlfDi+Zco/1Pvsm3P4CDL3/yDr4juH+Ba8iIP
pmHiczeqgPdTtDmsNMLxG+G3HqL2k+hRbB+BTzDJ3b81C7s+PKjVsQYvWYor
81GNEfzqxWmTc/RwscyFmrtc8JZj0fpxwnBkTBdzkuSY3P8AcxlP2g==
    "], 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`x}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.64463341342003*^9, {3.644633745165169*^9, 3.64463376488933*^9}, 
   3.644633838185298*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fittedPlt", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Normal", "@", "fitted"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.644633766367074*^9, 3.644633803298256*^9}, 
   3.6446339170582848`*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.64463391993925*^9, 3.644633921345756*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"fittedPlt", ",", "snepl", ",", 
   RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.644633840996072*^9, 3.644633879377315*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVxXk4lHkcAPB3xrOSo2yryViUmswi1SMqS33fVs5xLENTnrI9dFC6nuIx
bYXVdJEj1lYkDBU7D2NRhPm9mnG1xTgGK8uQJsfkzdSQWczu/vF5PlbhZ4KO
UjEM8/vP//scHe8kJkJ2e7mECdYFUfH3ZfvCh+mOsC52WVRkABWnGchSK+l7
YV4o3Cj0peKbnU2KH9CDodRa5yF4UvHvpduEd+hHwHDVk4wwVypO5IidbtMv
gHR8JjbXmoonJSbH3aJfBU42b4/pPxT8yAWSfpOeBcdnBL0riyi4XpZ3wceZ
IkgszW4LfY/hz6QOnp6W5ZDWdMyUuQPD9ycNDoiTq8Am5xBXaqKFMxXn7e9+
rgW7ig1s/bxFUKX3tlIoCFYnPx3zwBegtbEZdbi+gNkT8ctcmjQQxfU2OqCU
QDNjp8w0cB4alztoBada4HJhQ+i8eg4e8SVLZhtfwiZr7rmMy7OA0xoK2WWv
QHKKgm+yVIN9y2BNs20HeKVxa4VNn6AHZ0+XTEtB8pQpUQaoIFr/ZJdsaxfY
FBZes/v0Ef7s5zSsSO0GfebjKjfVNLA99o+MjfVAXsN4hY6hErbnJ3PyGb1A
HRRbtnEmQL6U2RMZ3wfBugZli5EKeOfdwaeJ+yGuZkqwQ/AWhPeGuZ1WA3Ar
dme7vEoOxTd0btpcfANKadut59lvQB0ROnmsbhAiJSH7RcxeMNh7LahizRAQ
HbUn8t2kcMn4neHIwWFIkBXUmF1vAkORHdbnJ4f86geKpEvVsCs2YFGskQNG
vaLvnXMF5Ral8DfkjkDCDqvkRvQMhYU4vl7OGgXhGota2+oWVC07mimaHQXT
8F9LM0s6kfMrIVWR/RZqvouiXzfpQ+vcj6kz945BXN8Rt9zPg8jJ0SmjSjEG
vnU0T/bOETSsut3G570DjJND442/RcptgTy6gwJaFZViz24Fsp6yn6R0K6B+
2oHyVcoEkjBius4mvgfJpLs5O16J0npkEUGMcfgShlpycBKRbCKDKhmH0jRB
qp7mI/ojZLWb87kJGIpye2JwToX4r5MejK6ahM0JRvqGHZ/QXMvBn1e9mISr
6QUDwT5qJM9AauPTU6BsdseqRLNottOF/ssKJUQ7W5w2NvuCzmatJ7j1Spgt
FvlU35lHa16vNx4L+wB3/TPPcFQaxJYJFsyXPoCPRdzEStYCUv1UED1YOg26
Cusu48ZFhA6X81b4kjAwqaez0lKLnndEs4b8SbDNSt+3kaFFT3fbfl0WSMLF
XaalLrZaJDAvzvXjkEBLZwZGbtei+/33K1PCSQhy8njY6K9FMT9eG9HnktAe
n+RyIV6L7PBDu5Y9IkFksnT+L7kWWZeb6fQ9IUFfxGshFVq03rK/9dHvJIQd
N/pW94MWmS4EBXtUkKCpNX/hMK9FujVeJ3n1JOSUW+g162HEyBbHezrdJPQF
u+5ba4URg3kzYd0yEuJtsARbBkb0G5Uz+P0kMJfEJU5MjGifshH+MERCzGPW
IsseI+ofr21JnCDhG01oUZwzRtTQ/k4JVJJQ127ZnuSKEZW8+0FWJAkR/NG5
VMCI0ojVQ8RnEip9T7CK3TGiuKuLnz5HwgGrzTFCL4zI35MedVhDAmV2Jq+O
hRG5Qr8tWxdJKHlZ3drsjxG/rTVQa7UkBDzkqjoDMeJf7cl5YQ==
      "]]}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.008333333333333333],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
3J97WQ==
       "]]}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Full,
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {-2.039951223694437, 2.2901013818986122`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.644633853805139*^9, 3.644633879765113*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solMSW", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"2", "c", " ", "s"}], " ", "\[Equal]", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"2", 
          SubscriptBox["\[Theta]", "v"]}], "]"}], "/", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          OverscriptBox["\[CapitalDelta]", "^"], "+", "1", "-", 
          RowBox[{"2", 
           OverscriptBox["\[CapitalDelta]", "^"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", 
             SubscriptBox["\[Theta]", "v"]}], "]"}]}]}], "]"}]}]}], "&&", 
      RowBox[{
       RowBox[{
        RowBox[{"c", "^", "2"}], "-", 
        RowBox[{"s", "^", "2"}]}], "==", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", 
            SubscriptBox["\[Theta]", "v"]}], "]"}], "-", 
          OverscriptBox["\[CapitalDelta]", "^"]}], ")"}], "/", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          SuperscriptBox[
           OverscriptBox["\[CapitalDelta]", "^"], "2"], "+", "1", "-", 
          RowBox[{"2", 
           OverscriptBox["\[CapitalDelta]", "^"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", 
             SubscriptBox["\[Theta]", "v"]}], "]"}]}]}], "]"}]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "s"}], "}"}]}], "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.644725256264626*^9, 3.6447252973454523`*^9}, {
  3.644725354775172*^9, 3.644725493738858*^9}, {3.644725564110549*^9, 
  3.644725564307652*^9}, {3.644725955820663*^9, 3.644726075085979*^9}, {
  3.644726136280204*^9, 3.644726169326981*^9}, {3.6447272106237926`*^9, 
  3.644727239197414*^9}, {3.644727304641588*^9, 3.644727348480356*^9}, {
  3.644727487067925*^9, 3.644727525769993*^9}, {3.644728693131535*^9, 
  3.644728705146172*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "\[Rule]", 
      FractionBox[
       SqrtBox[
        FractionBox[
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Theta]", "v"]}], "]"}], "-", 
          OverscriptBox["\[CapitalDelta]", "^"], "-", 
          RowBox[{
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
              OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
             SuperscriptBox[
              OverscriptBox["\[CapitalDelta]", "^"], "2"]}]], " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                FractionBox["1", 
                 RowBox[{"1", "+", 
                  OverscriptBox["\[CapitalDelta]", "^"], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
                   OverscriptBox["\[CapitalDelta]", "^"]}]}]], "-", 
                FractionBox["1", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
                   OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
                  SuperscriptBox[
                   OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], ")"}], 
              " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", 
                 SubscriptBox["\[Theta]", "v"]}], "]"}], "2"]}]}]]}]}], 
         SqrtBox[
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
            OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
           SuperscriptBox[
            OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]]], 
       SqrtBox["2"]]}], ",", 
     RowBox[{"s", "\[Rule]", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         SqrtBox["2"], " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
            OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
           SuperscriptBox[
            OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}]], 
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{"2", " ", 
          SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          OverscriptBox["\[CapitalDelta]", "^"], "-", 
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
           OverscriptBox["\[CapitalDelta]", "^"]}]}]], " ", 
        SqrtBox[
         FractionBox[
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Theta]", "v"]}], "]"}], "-", 
           OverscriptBox["\[CapitalDelta]", "^"], "-", 
           RowBox[{
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
               OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
              SuperscriptBox[
               OverscriptBox["\[CapitalDelta]", "^"], "2"]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  RowBox[{"1", "+", 
                   OverscriptBox["\[CapitalDelta]", "^"], "-", 
                   RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
                    OverscriptBox["\[CapitalDelta]", "^"]}]}]], "-", 
                 FractionBox["1", 
                  RowBox[{"1", "-", 
                   RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
                    OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
                   SuperscriptBox[
                    OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], ")"}], 
               " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", 
                  SubscriptBox["\[Theta]", "v"]}], "]"}], "2"]}]}]]}]}], 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
             OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
            SuperscriptBox[
             OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Theta]", "v"]}], "]"}]}], "+", 
          OverscriptBox["\[CapitalDelta]", "^"], "-", 
          RowBox[{
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
              OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
             SuperscriptBox[
              OverscriptBox["\[CapitalDelta]", "^"], "2"]}]], " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                FractionBox["1", 
                 RowBox[{"1", "+", 
                  OverscriptBox["\[CapitalDelta]", "^"], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
                   OverscriptBox["\[CapitalDelta]", "^"]}]}]], "-", 
                FractionBox["1", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
                   OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
                  SuperscriptBox[
                   OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], ")"}], 
              " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", 
                 SubscriptBox["\[Theta]", "v"]}], "]"}], "2"]}]}]]}]}], 
         ")"}]}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        SqrtBox[
         FractionBox[
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Theta]", "v"]}], "]"}], "-", 
           OverscriptBox["\[CapitalDelta]", "^"], "-", 
           RowBox[{
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
               OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
              SuperscriptBox[
               OverscriptBox["\[CapitalDelta]", "^"], "2"]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  RowBox[{"1", "+", 
                   OverscriptBox["\[CapitalDelta]", "^"], "-", 
                   RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
                    OverscriptBox["\[CapitalDelta]", "^"]}]}]], "-", 
                 FractionBox["1", 
                  RowBox[{"1", "-", 
                   RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
                    OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
                   SuperscriptBox[
                    OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], ")"}], 
               " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", 
                  SubscriptBox["\[Theta]", "v"]}], "]"}], "2"]}]}]]}]}], 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
             OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
            SuperscriptBox[
             OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]]], 
        SqrtBox["2"]]}]}], ",", 
     RowBox[{"s", "\[Rule]", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         SqrtBox["2"], " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
            OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
           SuperscriptBox[
            OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}]], 
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{"2", " ", 
          SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          OverscriptBox["\[CapitalDelta]", "^"], "-", 
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
           OverscriptBox["\[CapitalDelta]", "^"]}]}]], " ", 
        SqrtBox[
         FractionBox[
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Theta]", "v"]}], "]"}], "-", 
           OverscriptBox["\[CapitalDelta]", "^"], "-", 
           RowBox[{
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
               OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
              SuperscriptBox[
               OverscriptBox["\[CapitalDelta]", "^"], "2"]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  RowBox[{"1", "+", 
                   OverscriptBox["\[CapitalDelta]", "^"], "-", 
                   RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
                    OverscriptBox["\[CapitalDelta]", "^"]}]}]], "-", 
                 FractionBox["1", 
                  RowBox[{"1", "-", 
                   RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
                    OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
                   SuperscriptBox[
                    OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], ")"}], 
               " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", 
                  SubscriptBox["\[Theta]", "v"]}], "]"}], "2"]}]}]]}]}], 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
             OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
            SuperscriptBox[
             OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Theta]", "v"]}], "]"}], "-", 
          OverscriptBox["\[CapitalDelta]", "^"], "+", 
          RowBox[{
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
              OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
             SuperscriptBox[
              OverscriptBox["\[CapitalDelta]", "^"], "2"]}]], " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                FractionBox["1", 
                 RowBox[{"1", "+", 
                  OverscriptBox["\[CapitalDelta]", "^"], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
                   OverscriptBox["\[CapitalDelta]", "^"]}]}]], "-", 
                FractionBox["1", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
                   OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
                  SuperscriptBox[
                   OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], ")"}], 
              " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", 
                 SubscriptBox["\[Theta]", "v"]}], "]"}], "2"]}]}]]}]}], 
         ")"}]}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        SqrtBox[
         FractionBox[
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Theta]", "v"]}], "]"}], "-", 
           OverscriptBox["\[CapitalDelta]", "^"], "+", 
           RowBox[{
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
               OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
              SuperscriptBox[
               OverscriptBox["\[CapitalDelta]", "^"], "2"]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  RowBox[{"1", "+", 
                   OverscriptBox["\[CapitalDelta]", "^"], "-", 
                   RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
                    OverscriptBox["\[CapitalDelta]", "^"]}]}]], "-", 
                 FractionBox["1", 
                  RowBox[{"1", "-", 
                   RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
                    OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
                   SuperscriptBox[
                    OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], ")"}], 
               " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", 
                  SubscriptBox["\[Theta]", "v"]}], "]"}], "2"]}]}]]}]}], 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
             OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
            SuperscriptBox[
             OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]]], 
        SqrtBox["2"]]}]}], ",", 
     RowBox[{"s", "\[Rule]", 
      RowBox[{"-", 
       RowBox[{
        FractionBox["1", 
         RowBox[{
          SqrtBox["2"], " ", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
             OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
            SuperscriptBox[
             OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}]], 
        RowBox[{
         RowBox[{"Csc", "[", 
          RowBox[{"2", " ", 
           SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           OverscriptBox["\[CapitalDelta]", "^"], "-", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
            OverscriptBox["\[CapitalDelta]", "^"]}]}]], " ", 
         SqrtBox[
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Theta]", "v"]}], "]"}], "-", 
            OverscriptBox["\[CapitalDelta]", "^"], "+", 
            RowBox[{
             SqrtBox[
              RowBox[{"1", "-", 
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", 
                  SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
                OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
               SuperscriptBox[
                OverscriptBox["\[CapitalDelta]", "^"], "2"]}]], " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  FractionBox["1", 
                   RowBox[{"1", "+", 
                    OverscriptBox["\[CapitalDelta]", "^"], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
                    OverscriptBox["\[CapitalDelta]", "^"]}]}]], "-", 
                  FractionBox["1", 
                   RowBox[{"1", "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
                    OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
                    SuperscriptBox[
                    OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], ")"}], 
                " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", 
                   SubscriptBox["\[Theta]", "v"]}], "]"}], "2"]}]}]]}]}], 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
              OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
             SuperscriptBox[
              OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Theta]", "v"]}], "]"}]}], "+", 
           OverscriptBox["\[CapitalDelta]", "^"], "+", 
           RowBox[{
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
               OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
              SuperscriptBox[
               OverscriptBox["\[CapitalDelta]", "^"], "2"]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  RowBox[{"1", "+", 
                   OverscriptBox["\[CapitalDelta]", "^"], "-", 
                   RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
                    OverscriptBox["\[CapitalDelta]", "^"]}]}]], "-", 
                 FractionBox["1", 
                  RowBox[{"1", "-", 
                   RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
                    OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
                   SuperscriptBox[
                    OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], ")"}], 
               " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", 
                  SubscriptBox["\[Theta]", "v"]}], "]"}], "2"]}]}]]}]}], 
          ")"}]}]}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "\[Rule]", 
      FractionBox[
       SqrtBox[
        FractionBox[
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Theta]", "v"]}], "]"}], "-", 
          OverscriptBox["\[CapitalDelta]", "^"], "+", 
          RowBox[{
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
              OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
             SuperscriptBox[
              OverscriptBox["\[CapitalDelta]", "^"], "2"]}]], " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                FractionBox["1", 
                 RowBox[{"1", "+", 
                  OverscriptBox["\[CapitalDelta]", "^"], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
                   OverscriptBox["\[CapitalDelta]", "^"]}]}]], "-", 
                FractionBox["1", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
                   OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
                  SuperscriptBox[
                   OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], ")"}], 
              " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", 
                 SubscriptBox["\[Theta]", "v"]}], "]"}], "2"]}]}]]}]}], 
         SqrtBox[
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
            OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
           SuperscriptBox[
            OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]]], 
       SqrtBox["2"]]}], ",", 
     RowBox[{"s", "\[Rule]", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         SqrtBox["2"], " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
            OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
           SuperscriptBox[
            OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}]], 
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{"2", " ", 
          SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          OverscriptBox["\[CapitalDelta]", "^"], "-", 
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
           OverscriptBox["\[CapitalDelta]", "^"]}]}]], " ", 
        SqrtBox[
         FractionBox[
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Theta]", "v"]}], "]"}], "-", 
           OverscriptBox["\[CapitalDelta]", "^"], "+", 
           RowBox[{
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
               OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
              SuperscriptBox[
               OverscriptBox["\[CapitalDelta]", "^"], "2"]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  RowBox[{"1", "+", 
                   OverscriptBox["\[CapitalDelta]", "^"], "-", 
                   RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
                    OverscriptBox["\[CapitalDelta]", "^"]}]}]], "-", 
                 FractionBox["1", 
                  RowBox[{"1", "-", 
                   RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
                    OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
                   SuperscriptBox[
                    OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], ")"}], 
               " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", 
                  SubscriptBox["\[Theta]", "v"]}], "]"}], "2"]}]}]]}]}], 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
             OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
            SuperscriptBox[
             OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Theta]", "v"]}], "]"}]}], "+", 
          OverscriptBox["\[CapitalDelta]", "^"], "+", 
          RowBox[{
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
              OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
             SuperscriptBox[
              OverscriptBox["\[CapitalDelta]", "^"], "2"]}]], " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                FractionBox["1", 
                 RowBox[{"1", "+", 
                  OverscriptBox["\[CapitalDelta]", "^"], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
                   OverscriptBox["\[CapitalDelta]", "^"]}]}]], "-", 
                FractionBox["1", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
                   OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
                  SuperscriptBox[
                   OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], ")"}], 
              " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", 
                 SubscriptBox["\[Theta]", "v"]}], "]"}], "2"]}]}]]}]}], 
         ")"}]}]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.644725463475473*^9, 3.644725511126974*^9}, 
   3.644725573653459*^9, 3.644726086568664*^9, {3.6447261417661867`*^9, 
   3.6447261697745113`*^9}, 3.644727256688978*^9, 3.6447273662631607`*^9, 
   3.6447275453575287`*^9, 3.6447278901263657`*^9, {3.6447287041895227`*^9, 
   3.644728719517165*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"c", "/.", 
  RowBox[{"solMSW", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"s", "/.", 
  RowBox[{"solMSW", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6447286654743853`*^9, 3.64472867086255*^9}, {
  3.644728711380369*^9, 3.644728716210725*^9}, {3.644728879538384*^9, 
  3.644728880903631*^9}}],

Cell[BoxData[
 FractionBox[
  SqrtBox[
   FractionBox[
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", 
       SubscriptBox["\[Theta]", "v"]}], "]"}], "-", 
     OverscriptBox["\[CapitalDelta]", "^"], "-", 
     RowBox[{
      SqrtBox[
       RowBox[{"1", "-", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
         OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
        SuperscriptBox[
         OverscriptBox["\[CapitalDelta]", "^"], "2"]}]], " ", 
      SqrtBox[
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"1", "+", 
             OverscriptBox["\[CapitalDelta]", "^"], "-", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
              OverscriptBox["\[CapitalDelta]", "^"]}]}]], "-", 
           FractionBox["1", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
              OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
             SuperscriptBox[
              OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Theta]", "v"]}], "]"}], "2"]}]}]]}]}], 
    SqrtBox[
     RowBox[{"1", "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
       OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
      SuperscriptBox[
       OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]]], 
  SqrtBox["2"]]], "Output",
 CellChangeTimes->{{3.644728663551962*^9, 3.644728671601552*^9}, 
   3.644728719774851*^9, 3.644728881389673*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{
    SqrtBox["2"], " ", 
    SqrtBox[
     RowBox[{"1", "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
       OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
      SuperscriptBox[
       OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}]], 
  RowBox[{
   RowBox[{"Csc", "[", 
    RowBox[{"2", " ", 
     SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
   SqrtBox[
    RowBox[{"1", "+", 
     OverscriptBox["\[CapitalDelta]", "^"], "-", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
      OverscriptBox["\[CapitalDelta]", "^"]}]}]], " ", 
   SqrtBox[
    FractionBox[
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Theta]", "v"]}], "]"}], "-", 
      OverscriptBox["\[CapitalDelta]", "^"], "-", 
      RowBox[{
       SqrtBox[
        RowBox[{"1", "-", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
          OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
         SuperscriptBox[
          OverscriptBox["\[CapitalDelta]", "^"], "2"]}]], " ", 
       SqrtBox[
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox["1", 
             RowBox[{"1", "+", 
              OverscriptBox["\[CapitalDelta]", "^"], "-", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
               OverscriptBox["\[CapitalDelta]", "^"]}]}]], "-", 
            FractionBox["1", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
               OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
              SuperscriptBox[
               OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Theta]", "v"]}], "]"}], "2"]}]}]]}]}], 
     SqrtBox[
      RowBox[{"1", "-", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
        OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
       SuperscriptBox[
        OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Theta]", "v"]}], "]"}]}], "+", 
     OverscriptBox["\[CapitalDelta]", "^"], "-", 
     RowBox[{
      SqrtBox[
       RowBox[{"1", "-", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
         OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
        SuperscriptBox[
         OverscriptBox["\[CapitalDelta]", "^"], "2"]}]], " ", 
      SqrtBox[
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"1", "+", 
             OverscriptBox["\[CapitalDelta]", "^"], "-", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
              OverscriptBox["\[CapitalDelta]", "^"]}]}]], "-", 
           FractionBox["1", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
              OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
             SuperscriptBox[
              OverscriptBox["\[CapitalDelta]", "^"], "2"]}]]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Theta]", "v"]}], "]"}], "2"]}]}]]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{{3.644728663551962*^9, 3.644728671601552*^9}, 
   3.644728719774851*^9, 3.644728881398674*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"c", "/.", 
       RowBox[{"solMSW", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      OverscriptBox["\[CapitalDelta]", "^"]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      OverscriptBox["\[CapitalDelta]", "^"], ",", "0", ",", "0"}], "}"}]}], 
   "]"}], "//", "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"c", "/.", 
       RowBox[{"solMSW", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      OverscriptBox["\[CapitalDelta]", "^"]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      OverscriptBox["\[CapitalDelta]", "^"], ",", "0", ",", "1"}], "}"}]}], 
   "]"}], "//", "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"s", "/.", 
       RowBox[{"solMSW", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      OverscriptBox["\[CapitalDelta]", "^"]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      OverscriptBox["\[CapitalDelta]", "^"], ",", "0", ",", "1"}], "}"}]}], 
   "]"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.644726173003326*^9, 3.644726301485297*^9}, {
  3.644726345194961*^9, 3.6447263614036627`*^9}, {3.644727858927031*^9, 
  3.6447278682473288`*^9}, {3.6447287355566072`*^9, 3.6447287418749437`*^9}, {
  3.644729197160668*^9, 3.644729198229273*^9}, {3.644730605457964*^9, 
  3.6447306556900682`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "v"], "]"}], "2"], " ", 
    SqrtBox[
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        SubscriptBox["\[Theta]", "v"], "]"}], "2"]}]]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      OverscriptBox["\[CapitalDelta]", "^"], "]"}], "1"],
    SeriesData[
     OverHat[$CellContext`\[CapitalDelta]], 0, {}, 0, 1, 1],
    Editable->False]}],
  SeriesData[
   OverHat[$CellContext`\[CapitalDelta]], 0, {Rational[1, 2] Cos[
       Subscript[$CellContext`\[Theta], $CellContext`v]]^2 (-Sin[
         Subscript[$CellContext`\[Theta], $CellContext`v]]^2)^Rational[1, 2]},
    0, 1, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.6447262456297894`*^9, 3.644726301839856*^9}, {
   3.6447263537130527`*^9, 3.644726362529999*^9}, 3.644727890455071*^9, 
   3.644728742840458*^9, 3.644729198565179*^9, {3.6447306120899563`*^9, 
   3.6447306561336412`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "v"], "]"}], "2"], " ", 
    SqrtBox[
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        SubscriptBox["\[Theta]", "v"], "]"}], "2"]}]]}], "+", 
   RowBox[{
    FractionBox["1", "8"], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "v"], "]"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"14", "-", 
      RowBox[{"9", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Theta]", "v"]}], "]"}]}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", 
        SubscriptBox["\[Theta]", "v"]}], "]"}]}], ")"}], " ", 
    SqrtBox[
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        SubscriptBox["\[Theta]", "v"], "]"}], "2"]}]], " ", 
    OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      OverscriptBox["\[CapitalDelta]", "^"], "]"}], "2"],
    SeriesData[
     OverHat[$CellContext`\[CapitalDelta]], 0, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[
   OverHat[$CellContext`\[CapitalDelta]], 0, {Rational[1, 2] Cos[
       Subscript[$CellContext`\[Theta], $CellContext`v]]^2 (-Sin[
         Subscript[$CellContext`\[Theta], $CellContext`v]]^2)^Rational[1, 2], 
    Rational[1, 8] Cos[
       Subscript[$CellContext`\[Theta], $CellContext`v]]^2 (14 - 9 
     Cos[2 Subscript[$CellContext`\[Theta], $CellContext`v]] + 
     Cos[4 Subscript[$CellContext`\[Theta], $CellContext`v]]) (-Sin[
         Subscript[$CellContext`\[Theta], $CellContext`v]]^2)^Rational[1, 2]},
    0, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.6447262456297894`*^9, 3.644726301839856*^9}, {
   3.6447263537130527`*^9, 3.644726362529999*^9}, 3.644727890455071*^9, 
   3.644728742840458*^9, 3.644729198565179*^9, {3.6447306120899563`*^9, 
   3.644730656140196*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    FractionBox["3", "4"], " ", 
    SqrtBox[
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        SubscriptBox["\[Theta]", "v"], "]"}], "2"]}]], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", 
      SubscriptBox["\[Theta]", "v"]}], "]"}]}], "-", 
   RowBox[{
    FractionBox["1", "8"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "6"}], "+", 
        RowBox[{"47", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           SubscriptBox["\[Theta]", "v"]}], "]"}]}], "-", 
        RowBox[{"Cos", "[", 
         RowBox[{"4", " ", 
          SubscriptBox["\[Theta]", "v"]}], "]"}]}], ")"}], " ", 
      RowBox[{"Cot", "[", 
       SubscriptBox["\[Theta]", "v"], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "v"], "]"}], "2"]}], ")"}], 
       RowBox[{"3", "/", "2"}]]}], ")"}], " ", 
    OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      OverscriptBox["\[CapitalDelta]", "^"], "]"}], "2"],
    SeriesData[
     OverHat[$CellContext`\[CapitalDelta]], 0, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[
   OverHat[$CellContext`\[CapitalDelta]], 0, {Rational[3, 4] (-Sin[
         Subscript[$CellContext`\[Theta], $CellContext`v]]^2)^Rational[1, 2] 
    Sin[2 Subscript[$CellContext`\[Theta], $CellContext`v]], 
    Rational[-1, 8] (-6 + 
     47 Cos[2 Subscript[$CellContext`\[Theta], $CellContext`v]] - Cos[
     4 Subscript[$CellContext`\[Theta], $CellContext`v]]) Cot[
      Subscript[$CellContext`\[Theta], $CellContext`v]] (-Sin[
         Subscript[$CellContext`\[Theta], $CellContext`v]]^2)^Rational[3, 2]},
    0, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.6447262456297894`*^9, 3.644726301839856*^9}, {
   3.6447263537130527`*^9, 3.644726362529999*^9}, 3.644727890455071*^9, 
   3.644728742840458*^9, 3.644729198565179*^9, {3.6447306120899563`*^9, 
   3.644730656144904*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"2", 
      SubscriptBox["\[Theta]", "v"]}], "]"}], "/", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      OverscriptBox["\[CapitalDelta]", "^"], "+", "1", "-", 
      RowBox[{"2", 
       OverscriptBox["\[CapitalDelta]", "^"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", 
         SubscriptBox["\[Theta]", "v"]}], "]"}]}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     OverscriptBox["\[CapitalDelta]", "^"], ",", "0", ",", "1"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"2", 
        SubscriptBox["\[Theta]", "v"]}], "]"}], "-", 
      OverscriptBox["\[CapitalDelta]", "^"]}], ")"}], "/", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      SuperscriptBox[
       OverscriptBox["\[CapitalDelta]", "^"], "2"], "+", "1", "-", 
      RowBox[{"2", 
       OverscriptBox["\[CapitalDelta]", "^"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", 
         SubscriptBox["\[Theta]", "v"]}], "]"}]}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     OverscriptBox["\[CapitalDelta]", "^"], ",", "0", ",", "1"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6447292291598473`*^9, 3.644729278760297*^9}, {
  3.644729449523365*^9, 3.644729449906076*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", 
     SubscriptBox["\[Theta]", "v"]}], "]"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Theta]", "v"]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Theta]", "v"]}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Theta]", "v"]}], "]"}]}]}], ")"}], " ", 
    OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      OverscriptBox["\[CapitalDelta]", "^"], "]"}], "2"],
    SeriesData[
     OverHat[$CellContext`\[CapitalDelta]], 0, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[
   OverHat[$CellContext`\[CapitalDelta]], 0, {
    Sin[2 Subscript[$CellContext`\[Theta], $CellContext`v]], 
    Rational[-1, 2] Sin[2 Subscript[$CellContext`\[Theta], $CellContext`v]] + 
    Cos[2 Subscript[$CellContext`\[Theta], $CellContext`v]] 
     Sin[2 Subscript[$CellContext`\[Theta], $CellContext`v]]}, 0, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.644729249163945*^9, 3.644729279502293*^9, 
  3.64472945106485*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", 
     SubscriptBox["\[Theta]", "v"]}], "]"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Theta]", "v"]}], "]"}], "2"]}], ")"}], " ", 
    OverscriptBox["\[CapitalDelta]", "^"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      OverscriptBox["\[CapitalDelta]", "^"], "]"}], "2"],
    SeriesData[
     OverHat[$CellContext`\[CapitalDelta]], 0, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[
   OverHat[$CellContext`\[CapitalDelta]], 0, {
    Cos[2 Subscript[$CellContext`\[Theta], $CellContext`v]], -1 + 
    Cos[2 Subscript[$CellContext`\[Theta], $CellContext`v]]^2}, 0, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.644729249163945*^9, 3.644729279502293*^9, 
  3.64472945106813*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"-", "1"}], ")"}], "^", 
  RowBox[{"(", 
   RowBox[{"3", "/", "2"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.644730895487872*^9, 3.64473089972544*^9}}],

Cell[BoxData[
 RowBox[{"-", "\[ImaginaryI]"}]], "Output",
 CellChangeTimes->{3.644730900034298*^9}]
}, Open  ]]
},
WindowSize->{1247, 743},
WindowMargins->{{-3, Automatic}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 91, 1, 35, "Input"],
Cell[CellGroupData[{
Cell[674, 25, 165, 3, 36, "Input"],
Cell[842, 30, 228, 3, 36, "Output"]
}, Open  ]],
Cell[1085, 36, 486, 10, 36, "Input"],
Cell[CellGroupData[{
Cell[1596, 50, 342, 6, 35, "Input"],
Cell[1941, 58, 307, 6, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2285, 69, 756, 19, 57, "Input"],
Cell[3044, 90, 46690, 779, 706, 39584, 662, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[49749, 872, 289, 4, 35, "Input"],
Cell[50041, 878, 94, 1, 35, "Input"],
Cell[CellGroupData[{
Cell[50160, 883, 251, 5, 35, "Input"],
Cell[50414, 890, 15825, 274, 52, "Output"]
}, Open  ]],
Cell[66254, 1167, 325, 9, 35, "Input"],
Cell[66582, 1178, 91, 1, 35, "Input"],
Cell[CellGroupData[{
Cell[66698, 1183, 209, 4, 36, "Input"],
Cell[66910, 1189, 12912, 223, 708, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79859, 1417, 1895, 49, 84, "Input"],
Cell[81757, 1468, 28944, 737, 1405, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110738, 2210, 382, 9, 57, "Input"],
Cell[111123, 2221, 1999, 56, 139, "Output"],
Cell[113125, 2279, 4332, 123, 263, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117494, 2407, 1570, 44, 98, "Input"],
Cell[119067, 2453, 1075, 29, 55, "Output"],
Cell[120145, 2484, 2014, 54, 56, "Output"],
Cell[122162, 2540, 2150, 58, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124349, 2603, 1393, 42, 77, "Input"],
Cell[125745, 2647, 1350, 38, 57, "Output"],
Cell[127098, 2687, 962, 28, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128097, 2720, 203, 6, 35, "Input"],
Cell[128303, 2728, 99, 2, 35, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
